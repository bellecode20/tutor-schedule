{"version":3,"sources":["Styles/modal.module.scss","Styles/tutorial.module.scss","features/profilesSlice.js","Components/HomeworksByDate.js","features/calendarSlice.js","features/clickedDateSlice.js","Components/Calendar.js","features/modalSlice.js","Components/BuildHomework.js","Components/Profiles/TutorialForm.js","Components/Profiles/ProfileForm.js","Components/Profiles/BuildProfile.js","Components/Profiles/Profiles.js","Components/Profiles/DetailedProfile.js","Components/NotFound.js","images/check.svg","images/error.svg","Components/Modal.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","app/store.js","index.js"],"names":["module","exports","initialState","profiles","JSON","parse","localStorage","getItem","profilesSlice","createSlice","name","reducers","setProfilesKey","state","action","payload","setProfilesLS","setItem","stringify","actions","HomeworksByDate","homework","setHomework","closeHomeworks","dispatch","useDispatch","calendar","useSelector","clickedDate","date","hasHomework","student","content","thisHomework","getHomework","homeworkInput","h","length","homeworkStudent","homeworkDate","useEffect","className","onClick","reduce","acc","cur","fullDate","students","map","stu","studentIndex","color","style","visibility","info","afterDelete","filter","el","id","newAllStu","extraLesson","includes","updatedExtra","deleteExtraLesson","deleteHomework","whiteSpace","to","process","calendarSlice","changeCalendar","clickedDateSlice","changeDate","Calendar","profilesKey","useState","displayMenu","setDisplayMenu","displayHomeworks","setDisplayHomeworks","Date","today","setToday","getDate","month","getMonth","year","getFullYear","makeTwoDigit","num","toString","padStart","makeCalendar","daysToNumArray","thisMonthCalendar","prevLastDate","startDateInfo","lastDateInfo","lastDate","dates","i","push","prevDates","dayOfStartDate","getDay","prevVisibleDates","slice","lastVisibleDates","개수","concat","datesOfThisMonth","dayNum","yearMonthDate","calendarYear","calendarMonth","calendarDate","isPrevMonthDate","isNextMonthDate","studentsHavingLesson","day","startYear","Number","firstDate","substring","startMonth","startDate","checkDay","days","isLessonDay","showMenu","changeSelectedStates","e","targetDate","currentTarget","getAttribute","oneDay","obj","idx","modalSlice","isShown","total","mode","mainText","subText","buttonType","buttonLinks","toggleShowing","changeId","BuildHomework","navigate","useNavigate","useParams","newHomework","setNewHomework","changeNewHomework","target","value","onSubmit","preventDefault","type","onChange","checked","placeholder","writtenYet","valueOf","find","selectedStu","clickedlessonDay","updatedStudents","checkIsExtra","TutorialForm","changeHandler","profileSubmit","profileSave","colorMapArr","dayMapArr","allValues","AOS","init","refresh","console","log","handleEnter","form","index","indexOf","elements","focus","key","toLowerCase","keyCode","startBtn","useRef","current","duration","tutorial","wrapper","wrapper__form","wrapper__slide","textContainer","question","ref","onKeyDown","content__align","title","fee__container","list","min","days__container","htmlFor","dayLabel","colors__container","colors","colorLabel","ProfileForm","BuildProfile","wage","onWeek","hour","totalNum","toISOString","memo","setAllValues","daysNewValue","parseInt","x","profileObjWithId","Profiles","modal","deleteState","setDeleteState","selectedDays","setSelectedDays","checkedProfile","setCheckedProfile","displayCheckBtn","studentInfoMap","profileOnClick","filterUnChecked","daysAfterDelete","onDeleteMode","DetailedProfile","profileId","profileIdInUrl","detailedStudent","NotFound","ModalButton","thisModal","closeModal","document","body","overflow","btnType","btnLinks","ok_btn","autoFocus","cancel_btn","do_btn","Modal","addEventListener","ReactDOM","createPortal","overlay","success_container","error_container","icon_wrap","icon","src","check","error","text_main","text_sub","getElementById","App","window","saved","homeworkInfo","setHomeworkInfo","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","render","StrictMode","URL","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2403f888.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-btns--left\":\"modal_nav-btns--left__3E6Br\",\"nav-btn--container\":\"modal_nav-btn--container__mOHFH\",\"nav-btn\":\"modal_nav-btn__rxV3a\",\"flex-row\":\"modal_flex-row__2yNR6\",\"flex-column\":\"modal_flex-column__2m25i\",\"flex-center\":\"modal_flex-center__1_qg6\",\"font--title\":\"modal_font--title__L-RxT\",\"page-title\":\"modal_page-title__27T0P\",\"font--small-title\":\"modal_font--small-title__2We5F\",\"overlay\":\"modal_overlay__1nsFv\",\"content\":\"modal_content__2gHYV\",\"do_btn\":\"modal_do_btn__G-9q8\",\"text_main\":\"modal_text_main__36KAV\",\"font--basic-content\":\"modal_font--basic-content__pk65i\",\"subject--container__input\":\"modal_subject--container__input__3h-To\",\"subject--container-size\":\"modal_subject--container-size__3s3fk\",\"titleLine\":\"modal_titleLine__ptYGa\",\"contentLine\":\"modal_contentLine__3dgCn\",\"saveBtn\":\"modal_saveBtn__aN9X_\",\"pinkCoral\":\"modal_pinkCoral__2GxKs\",\"lightPink\":\"modal_lightPink__3t2D4\",\"deepYellow\":\"modal_deepYellow__xdYw-\",\"lightYellow\":\"modal_lightYellow__2Jbw8\",\"lightGreen\":\"modal_lightGreen__VEvkB\",\"fluorescentGreen\":\"modal_fluorescentGreen__pOF-5\",\"lightblue\":\"modal_lightblue__AbbGz\",\"deepblue\":\"modal_deepblue__v9BH4\",\"pastelPurple\":\"modal_pastelPurple__2i1uk\",\"link--remove-style\":\"modal_link--remove-style__1LvzM\",\"success_container\":\"modal_success_container__1zBoj\",\"error_container\":\"modal_error_container__2Jd39\",\"icon_wrap\":\"modal_icon_wrap__1sivj\",\"icon\":\"modal_icon__ARqii\",\"text_sub\":\"modal_text_sub__2AZQ0\",\"cancel_btn\":\"modal_cancel_btn__2xD9_\",\"ok_btn\":\"modal_ok_btn__3HK3V\",\"text\":\"modal_text__3-StZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-btns--left\":\"tutorial_nav-btns--left__29ZrY\",\"nav-btn--container\":\"tutorial_nav-btn--container___a5j1\",\"nav-btn\":\"tutorial_nav-btn__2C7Zy\",\"flex-row\":\"tutorial_flex-row__2yeMl\",\"wrapper\":\"tutorial_wrapper__3ob0p\",\"wrapper__slide\":\"tutorial_wrapper__slide__3ObuA\",\"content\":\"tutorial_content__2RCqu\",\"content__align\":\"tutorial_content__align__2eU0e\",\"fee__container\":\"tutorial_fee__container__2KAfG\",\"list\":\"tutorial_list__37fLQ\",\"flex-column\":\"tutorial_flex-column__3AWqh\",\"colors__container\":\"tutorial_colors__container__3vzs5\",\"colors\":\"tutorial_colors__kHsin\",\"colorLabel\":\"tutorial_colorLabel__2_Z3W\",\"textContainer\":\"tutorial_textContainer__tyLO9\",\"flex-center\":\"tutorial_flex-center__EJ5jM\",\"font--title\":\"tutorial_font--title__3XgsB\",\"page-title\":\"tutorial_page-title__1abRC\",\"font--small-title\":\"tutorial_font--small-title__ZX_5B\",\"font--basic-content\":\"tutorial_font--basic-content__12qXv\",\"subject--container__input\":\"tutorial_subject--container__input__3dvUb\",\"subject--container-size\":\"tutorial_subject--container-size__2QCHg\",\"titleLine\":\"tutorial_titleLine__2wqeS\",\"contentLine\":\"tutorial_contentLine__2083O\",\"saveBtn\":\"tutorial_saveBtn__3JGhK\",\"pinkCoral\":\"tutorial_pinkCoral__28Npg\",\"lightPink\":\"tutorial_lightPink__2_l9I\",\"deepYellow\":\"tutorial_deepYellow__1JnTa\",\"lightYellow\":\"tutorial_lightYellow__2I5Dx\",\"lightGreen\":\"tutorial_lightGreen__2Dkvw\",\"fluorescentGreen\":\"tutorial_fluorescentGreen__1jL4a\",\"lightblue\":\"tutorial_lightblue__3w_kD\",\"deepblue\":\"tutorial_deepblue__UiJr4\",\"pastelPurple\":\"tutorial_pastelPurple__1GF-T\",\"link--remove-style\":\"tutorial_link--remove-style__bgRcM\",\"wrapper__form\":\"tutorial_wrapper__form__1KWzc\",\"question\":\"tutorial_question__Ugd4S\",\"title\":\"tutorial_title__KWKqV\",\"days__container\":\"tutorial_days__container__3JHEs\",\"dayLabel\":\"tutorial_dayLabel__2Ua5e\",\"checked\":\"tutorial_checked__2Uahq\",\"color\":\"tutorial_color__32I0e\"};","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  profiles: JSON.parse(localStorage.getItem(\"profilesKey\")),\n};\nexport const profilesSlice = createSlice({\n  name: \"profiles\",\n  initialState,\n  reducers: {\n    setProfilesKey: (state, action) => {\n      state.profiles = action.payload;\n    },\n    setProfilesLS: (state) => {\n      localStorage.setItem(\"profilesKey\", JSON.stringify(state.profiles));\n    },\n  },\n});\n\nexport const { setProfilesKey, setProfilesLS } = profilesSlice.actions;\nexport default profilesSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiX, BiTrash, BiPlus } from \"react-icons/bi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setProfilesKey, setProfilesLS } from \"../features/profilesSlice\";\nimport \"../Styles/HomeworksByDate.scss\";\nimport \"../Styles/basic.scss\";\nimport \"../Styles/calendar.scss\";\nconst HomeworksByDate = ({ homework, setHomework, closeHomeworks }) => {\n  const dispatch = useDispatch();\n  const calendar = useSelector((state) => state.calendar.calendar);\n  const profilesKey = useSelector((state) => state.profiles.profiles);\n  const clickedDate = useSelector((state) => state.clickedDate.date);\n  const getStuHavingLesson = () => {\n    // 클릭한 날에 수업이 있는 학생들을 배열로 리턴한다.\n    return calendar.reduce((acc, cur) => {\n      if (cur.fullDate === clickedDate) return cur.students;\n      return acc;\n    }, []);\n  };\n  const hasHomework = (student) => {\n    let content = \"\";\n    let thisHomework = getHomework(student);\n    if (thisHomework != 0) return (content = thisHomework.homeworkInput);\n    return content;\n  };\n  const getHomework = (student) => {\n    for (let h = 0; h < homework.length; h++) {\n      if (student.name == homework[h].homeworkStudent) {\n        if (clickedDate == homework[h].homeworkDate) {\n          return homework[h];\n        }\n      }\n    }\n    // 해당하는 숙제가 없으면 무의미한 값을 리턴한다.\n    return 0;\n  };\n  const deleteHomework = (info) => {\n    const getHomeworks = JSON.parse(localStorage.getItem(\"homeworksKey\"));\n    const afterDelete = getHomeworks.filter((el) => el.id != info.id);\n    const deleteExtraLesson = (info) => {\n      let allStu = JSON.parse(localStorage.getItem(\"profilesKey\"));\n      const newAllStu = allStu.map((stu) => {\n        if (stu.extraLesson.includes(info.homeworkDate)) {\n          let updatedExtra = stu.extraLesson.filter(\n            (el) => el != info.homeworkDate\n          );\n          stu.extraLesson = updatedExtra;\n        }\n        return stu;\n      });\n      dispatch(setProfilesKey(newAllStu));\n      dispatch(setProfilesLS());\n    };\n    deleteExtraLesson(info);\n    setHomework(afterDelete);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"homeworksKey\", JSON.stringify(homework));\n  }, [homework]);\n\n  return (\n    <div className=\"calendar__homework-lists\">\n      <div\n        className=\"calendar__homework-lists__close-btn nav-btn\"\n        onClick={() => closeHomeworks()}\n      >\n        <BiX></BiX>\n      </div>\n      <div className=\"calendar__homework-lists__date\">{clickedDate}</div>\n      <div className=\"calendar__homework-lists__all-students\">\n        {getStuHavingLesson().map((stu, studentIndex) => {\n          return (\n            <div key={studentIndex} className=\"calendar__homework-lists__list\">\n              <div className={`calendar__homework-list__student ${stu.color}`}>\n                {stu.name}\n                <div className=\"calendar__homework-list__delete\">\n                  {hasHomework(stu) == \"\" ? (\n                    <BiTrash\n                      className=\"calendar__homework-list__deleteBtn\"\n                      style={{ visibility: \"hidden\" }}\n                    ></BiTrash>\n                  ) : (\n                    <BiTrash\n                      className=\"calendar__homework-list__deleteBtn\"\n                      onClick={() => {\n                        deleteHomework(getHomework(stu));\n                      }}\n                    ></BiTrash>\n                  )}\n                </div>\n              </div>\n              <div className=\"calendar__homework-list__content\">\n                {hasHomework(stu) == \"\" ? (\n                  <p className=\"homework-list__noContent\">숙제가 없어요</p>\n                ) : (\n                  <p style={{ whiteSpace: \"pre-line\" }}>{hasHomework(stu)}</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"calendar__homework-lists__addHmwk\">\n        <Link\n          to={`${process.env.REACT_APP_PATH}/homeworkview/${clickedDate}`}\n          className=\"link--remove-style\"\n        >\n          <button>\n            <BiPlus></BiPlus> 숙제\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default HomeworksByDate;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  calendar: {},\n};\nexport const calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    changeCalendar: (state, action) => {\n      state.calendar = action.payload;\n    },\n  },\n});\n\nexport const { changeCalendar } = calendarSlice.actions;\nexport default calendarSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  date: \"2022-01-01\",\n};\nexport const clickedDateSlice = createSlice({\n  name: \"clickedDate\",\n  initialState,\n  reducers: {\n    changeDate: (state, action) => {\n      state.date = action.payload;\n    },\n  },\n});\n\nexport const { changeDate } = clickedDateSlice.actions;\nexport default clickedDateSlice.reducer;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  BiX,\n  BiPlus,\n  BiMenu,\n  BiChevronLeft,\n  BiChevronRight,\n} from \"react-icons/bi\";\nimport HomeworksByDate from \"./HomeworksByDate\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeCalendar } from \"../features/calendarSlice\";\nimport { changeDate } from \"../features/clickedDateSlice\";\nimport \"../Styles/basic.scss\";\nimport \"../Styles/calendar.scss\";\nconst Calendar = ({ homework, setHomework }) => {\n  const dispatch = useDispatch();\n  const profilesKey = useSelector((state) => state.profiles.profiles);\n  const [displayMenu, setDisplayMenu] = useState(false);\n  const [displayHomeworks, setDisplayHomeworks] = useState(false);\n  let [today, setToday] = useState(new Date());\n  let date = today.getDate();\n  let month = today.getMonth() + 1;\n  let year = today.getFullYear();\n  const makeTwoDigit = (num) => {\n    return num.toString().padStart(2, \"0\");\n  };\n  const makeCalendar = () => {\n    //// 요일을 번호로 나타낸다. 일요일부터 0번으로 시작한다.\n    const daysToNumArray = [\n      0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3,\n      4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6,\n    ];\n    const datesOfThisMonth = () => {\n      //저번 달 정보들을 선언한다.\n      let prevDateInfo = new Date(year, month - 1, 0);\n      let prevLastDate = prevDateInfo.getDate();\n\n      //이번 달의 첫번째 날짜를 찾아낸다.\n      let startDateInfo = new Date(year, month - 1, 1);\n      //이번 달의 마지막 날짜와 요일을 찾아낸다.\n      let lastDateInfo = new Date(year, month, 0);\n      let lastDate = lastDateInfo.getDate();\n\n      //이번 달 1일~ 31일(혹은 30일)까지를 배열에 넣는다.\n      const dates = [];\n      for (let i = 1; i <= lastDate; i++) {\n        dates.push(i);\n      }\n\n      //저번 달 1일 ~ 31일(혹은 30일)까지를 배열에 넣는다.\n      const prevDates = [];\n      for (let i = 1; i <= prevLastDate; i++) {\n        prevDates.push(i);\n      }\n\n      //저번 달 날짜 중에서, 이번 달 달력에 보이는 날짜들을 배열에 넣는게 목표이다.\n      // 1. 요일 번호를 찾는다. 요일 번호는 이번 달의 첫번째 날 요일(숫자)랑 똑같다.\n      // 2. 저번달 날짜들 배열을 만들고, 거기에서 요일 번호만큼의 개수만큼 배열 값에서 따로 자른다(뒤에서부터 자른다.).\n      let dayOfStartDate = startDateInfo.getDay();\n      let prevVisibleDates = prevDates.slice(-dayOfStartDate);\n\n      //다음 달 날짜 중에서, 이번 달 달력에 보이는 날짜들을 배열에 넣는게 목표이다.\n      // 1. 요일 번호를 찾는다.\n      let dayOfLastDate = lastDateInfo.getDay();\n      // 2. 보이는 날짜들이 몇 개 인지 구하고, 그 개수만큼 배열에 1을 추가하는 반복문을 돌린다.\n      let lastVisibleDates = [];\n      const 개수 = 7 - dayOfLastDate - 1;\n      for (let i = 1; i <= 개수; i++) {\n        lastVisibleDates.push(i);\n      }\n\n      //저번 달, 이번 달, 다음 달 날짜 배열들을 다 합쳐서 이번 달력 배열을 만든다.\n      //이번달이 일요일부터 시작하면, 저번 달 날짜 배열은 합치지 않는다.\n      let fullDatesOfMonth = [];\n      if (dayOfStartDate == 0) {\n        fullDatesOfMonth = dates.concat(lastVisibleDates);\n      } else {\n        fullDatesOfMonth = prevVisibleDates.concat(dates, lastVisibleDates);\n      }\n      return fullDatesOfMonth;\n    };\n\n    const fullDate = (date, i) => {\n      const isPrevMonthDate = (i) => {\n        if (i <= 6 && 22 <= date && date <= 31) return true;\n        return false;\n      };\n      const isNextMonthDate = (i) => {\n        if (i >= 22 && date <= 6) return true;\n        return false;\n      };\n      let calendarYear = year;\n      let calendarMonth = month;\n      let calendarDate = date;\n      if (isPrevMonthDate(i)) {\n        calendarMonth = month - 1;\n        if (month == 1) {\n          calendarMonth = 12;\n          calendarYear = year - 1;\n        }\n      }\n      if (isNextMonthDate(i)) {\n        calendarMonth = month + 1;\n        if (month == 12) {\n          calendarMonth = 1;\n          calendarYear = year + 1;\n        }\n      }\n      return `${calendarYear}-${makeTwoDigit(calendarMonth)}-${makeTwoDigit(\n        calendarDate\n      )}`;\n    };\n    const isLessonDay = (info, fullDate, day) => {\n      const startYear = Number(info.firstDate.substring(0, 4));\n      const startMonth = Number(info.firstDate.substring(5, 7));\n      const startDate = Number(info.firstDate.substring(8, 10));\n      const calendarYear = Number(fullDate.substring(0, 4));\n      const calendarMonth = Number(fullDate.substring(5, 7));\n      const calendarDate = Number(fullDate.substring(8, 10));\n      const checkDay = info.days.includes(day);\n      if (startYear == calendarYear) {\n        if (startMonth == calendarMonth) {\n          if (startDate <= calendarDate) {\n            if (checkDay) return true;\n          }\n        } else if (startMonth < calendarMonth) {\n          if (checkDay) return true;\n        }\n      } else if (startYear < calendarYear) {\n        // 이 학생이 수업을 시작한 날짜가 예전일때.\n        if (checkDay) return true;\n      }\n      // 수업 요일이 아니지만, 숙제를 낸 경우에도 렌더링한다.\n      if (info.extraLesson.includes(fullDate)) return true;\n      //예전 연도는 렌더링하지 않는다.\n      return false;\n    };\n    const thisMonthCalendar = [...datesOfThisMonth()].map((el, i) => {\n      let dayNum = daysToNumArray[i];\n      let yearMonthDate = fullDate(el, i);\n      let studentsHavingLesson = [];\n      // LS에 저장된 학생 프로필이 있다면 추가한다.\n      if (profilesKey != null) {\n        studentsHavingLesson = [...profilesKey].reduce((acc, cur) => {\n          if (isLessonDay(cur, yearMonthDate, dayNum)) acc.push(cur);\n          return acc;\n        }, []);\n      }\n      return {\n        fullDate: yearMonthDate,\n        date: el,\n        dayNum: dayNum,\n        students: studentsHavingLesson,\n      };\n    });\n    return thisMonthCalendar;\n  };\n  const toPrevMonth = () => {\n    setToday(new Date(year, month - 2, date));\n    closeHomeworks();\n  };\n  const toNextMonth = () => {\n    setToday(new Date(year, month, date));\n    closeHomeworks();\n  };\n  const showMenu = () => {\n    setDisplayMenu(!displayMenu);\n  };\n  const closeHomeworks = () => {\n    setDisplayHomeworks(false);\n  };\n  const changeSelectedStates = (e) => {\n    const targetDate = e.currentTarget.getAttribute(\"data-full-date\");\n    dispatch(changeDate(targetDate));\n    setDisplayHomeworks(true);\n  };\n  useEffect(() => {\n    dispatch(changeCalendar(makeCalendar()));\n  }, [today]);\n  useEffect(() => {\n    // extraLesson을 삭제하면 (학생 프로필을 수정하면) 캘린더 객체도 업뎃해야 한다.\n    dispatch(changeCalendar(makeCalendar()));\n  }, [profilesKey]);\n  return (\n    <div className=\"calendar\">\n      <div onClick={showMenu} className=\"calendar__show-menu-btn\">\n        <BiMenu className=\"\"></BiMenu>\n      </div>\n      {displayMenu && (\n        <div className=\"calendar__menu\">\n          <div onClick={showMenu} className=\"calendar__menu__close-btn nav-btn\">\n            <BiX className=\"\"></BiX>\n          </div>\n          <Link\n            to={`${process.env.REACT_APP_PATH}/buildprofile`}\n            className=\"link--remove-style\"\n          >\n            <div className=\"calendar__menu__list\">학생 추가</div>\n          </Link>\n          <div className=\"menu__line\"></div>\n          <Link\n            to={`${process.env.REACT_APP_PATH}/profiles`}\n            className=\"link--remove-style\"\n          >\n            <div className=\"calendar__menu__list\">학생 모아보기</div>\n          </Link>\n          <div className=\"menu__line\"></div>\n          <Link\n            to={`${process.env.REACT_APP_PATH}/homeworkview/:${year}-${month}-${date}`}\n            className=\"link--remove-style\"\n          >\n            <div className=\"calendar__menu__list\">오늘 숙제 추가</div>\n          </Link>\n          <div className=\"menu__line\"></div>\n        </div>\n      )}\n      <div className=\"calendar-only\">\n        <div className=\"calendarTop\">\n          <div className=\"calendarTop__this-month\">\n            <button className=\"calendarTop__button--left\" onClick={toPrevMonth}>\n              <BiChevronLeft className=\"nav-btn\"></BiChevronLeft>\n            </button>\n            <p>{month}월</p>\n            <button\n              className=\"calendarTop__button--right\"\n              onClick={toNextMonth}\n            >\n              <BiChevronRight className=\"nav-btn\"></BiChevronRight>\n            </button>\n          </div>\n        </div>\n        <div className=\"calendarBttm\">\n          {year} - {month} - {date}\n          <div className=\"days\">\n            <div className=\"sunday\">일</div>\n            <div className=\"monday\">월</div>\n            <div className=\"tuesday\">화</div>\n            <div className=\"wednesday\">수</div>\n            <div className=\"thursday\">목</div>\n            <div className=\"friday\">금</div>\n            <div className=\"saturday\">토</div>\n          </div>\n          <div className=\"dates\">\n            {makeCalendar().map((oneDay, i) => (\n              <div\n                className=\"dates__date\"\n                key={i}\n                data-full-date={oneDay.fullDate}\n                onClick={changeSelectedStates}\n              >\n                {oneDay.date}\n                <div className=\"dates__studentColors\">\n                  {oneDay.students.map((obj, idx) => (\n                    <div\n                      className={`${obj.color} studentInCal`}\n                      key={idx}\n                    ></div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      {displayHomeworks && (\n        <HomeworksByDate\n          closeHomeworks={closeHomeworks}\n          homework={homework}\n          setHomework={setHomework}\n        ></HomeworksByDate>\n      )}\n      <Link\n        to={`${process.env.REACT_APP_PATH}/homeworkview/${year}-${makeTwoDigit(\n          month\n        )}-${makeTwoDigit(date)}`}\n        className=\"link--remove-style\"\n      >\n        <div className=\"calendar__add-hwmk-btn\">\n          <BiPlus className=\"calendar__add-hwmk-btn__icon\"></BiPlus>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isShown: false,\n  id: \"successSaving\",\n  total: [\n    {\n      id: \"successSaving\",\n      mode: \"Success\",\n      mainText: \"저장~\",\n      subText: \"저장했어요\",\n      buttonType: \"one\",\n      buttonLinks: process.env.REACT_APP_PATH,\n    },\n    {\n      id: \"sameName\",\n      mode: \"Error\",\n      mainText: \"앗...\",\n      subText: \"똑같은 이름의 학생이 있어요\",\n      buttonType: \"one\",\n      buttonLinks: null,\n    },\n    {\n      id: \"writtenYet\",\n      mode: \"Error\",\n      mainText: \"앗...\",\n      subText: \"작성하지 않은 항목이 있어요\",\n      buttonType: \"one\",\n      buttonLinks: null,\n    },\n    {\n      id: \"noStudentInHomework\",\n      mode: \"Error\",\n      mainText: \"앗...\",\n      subText: \"학생이 없어요\",\n      buttonType: \"two\",\n      buttonLinks: [\n        process.env.REACT_APP_PATH,\n        process.env.REACT_APP_PATH + \"/buildprofile\",\n      ],\n    },\n    {\n      id: \"existHomework\",\n      mode: \"Error\",\n      mainText: \"앗...\",\n      subText: \"이미 숙제가 있어요\",\n      buttonType: \"one\",\n      buttonLinks: null,\n    },\n  ],\n};\nexport const modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    toggleShowing: (state) => {\n      state.isShown = !state.isShown;\n    },\n    changeId: (state, action) => {\n      state.id = action.payload;\n    },\n  },\n});\n\nexport const { toggleShowing, changeId } = modalSlice.actions;\nexport default modalSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { BiHome, BiLeftArrowAlt } from \"react-icons/bi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleShowing, changeId } from \"../features/modalSlice.js\";\nimport { setProfilesKey, setProfilesLS } from \"../features/profilesSlice\";\nimport \"../Styles/BuildHomework.scss\";\nconst BuildHomework = ({ homework, setHomework }) => {\n  let profilesKey = useSelector((state) => state.profiles.profiles);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { clickedDate } = useParams();\n  const [newHomework, setNewHomework] = useState({\n    homeworkStudent: \"\",\n    homeworkDate: clickedDate,\n    homeworkInput: \"\",\n  });\n\n  const changeNewHomework = (e) => {\n    setNewHomework({ ...newHomework, [e.target.name]: e.target.value });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"homeworksKey\", JSON.stringify(homework));\n  }, [homework]);\n\n  //현재 저장한 학생이 0명일 때 모달 창 띄우기\n  useEffect(() => {\n    if (profilesKey == null || profilesKey.length == 0) {\n      dispatch(toggleShowing());\n      dispatch(changeId(\"noStudentInHomework\"));\n    } else if (profilesKey.length == 1) {\n      setNewHomework({ ...newHomework, homeworkStudent: profilesKey[0].name });\n      return;\n    }\n  }, []);\n  const checkIsExtra = () => {\n    // 선택한 날짜가 수업하는 요일인지 체크한다.\n    // 만약 수업하는 요일이 아니라면 학생 프로필에 extraLesson키에도 수업날짜를 추가할 것이다.\n    let selectedStu = profilesKey.filter(\n      (el) => el.name == newHomework.homeworkStudent\n    )[0];\n    const clickedlessonDay = new Date(newHomework.homeworkDate).getDay();\n    if (selectedStu.days.includes(clickedlessonDay)) return; // 수업하는 요일이라면 종료한다.\n    // 수업하는 요일이 아닌 경우이다. 선택한 학생 extraLesson에 선택한 날짜 string을 추가한다.\n    const updatedStudents = profilesKey.map((el) => {\n      if (el == selectedStu) {\n        let updatedExtra = [...selectedStu.extraLesson];\n        updatedExtra.push(newHomework.homeworkDate);\n        return {\n          ...selectedStu,\n          ...{\n            extraLesson: updatedExtra,\n          },\n        };\n      } else return el;\n    });\n    dispatch(setProfilesKey(updatedStudents));\n    dispatch(setProfilesLS());\n  };\n  const homeworkSave = (e) => {\n    const getExistHomework = () => {\n      const existHomework = homework.filter((el) => {\n        return (\n          el.homeworkDate == newHomework.homeworkDate &&\n          el.homeworkStudent == newHomework.homeworkStudent\n        );\n      });\n      return existHomework;\n    };\n    const writtenYet =\n      newHomework.homeworkStudent == \"\" ||\n      newHomework.homeworkDate == \"\" ||\n      newHomework.homeworkInput == \"\";\n    //이미 작성한 숙제가 있는 경우엔 모달창을 띄운다.\n    if (getExistHomework().length > 0) {\n      e.preventDefault();\n      dispatch(toggleShowing());\n      dispatch(changeId(\"existHomework\"));\n    } else if (!writtenYet) {\n      //작성을 다 한 경우이다.\n      const id = { id: new Date().valueOf() };\n      //student에서 동일한 학생 이름을 찾아서, 그 때 고른 color 값으로 추가한다.\n      const color = profilesKey.find(\n        (el) => el.name == newHomework.homeworkStudent\n      ).color;\n      const colorObj = { color: color };\n      // setNewHomework({ ...newHomework, ...colorObj, ...id });\n      checkIsExtra(); // 학생도 추가한다.\n      dispatch(toggleShowing());\n      dispatch(changeId(\"successSaving\"));\n    } else {\n      e.preventDefault();\n      dispatch(toggleShowing());\n      dispatch(changeId(\"writtenYet\"));\n    }\n  };\n\n  const homeworkSubmit = (e) => {\n    e.preventDefault();\n    setHomework([...homework, newHomework]);\n  };\n\n  return (\n    <div className=\"build-homework\">\n      <div className=\"nav-btn--container\">\n        <BiLeftArrowAlt\n          className=\"nav-btn\"\n          onClick={() => navigate(-1)}\n        ></BiLeftArrowAlt>\n        <BiHome\n          className=\"nav-btn\"\n          onClick={() => navigate(process.env.REACT_APP_PATH)}\n        ></BiHome>\n      </div>\n      <div className=\"page-title\">숙제 추가</div>\n      <div className=\"titleLine\"></div>\n      <form onSubmit={homeworkSubmit}>\n        <div className=\"homeworkForm\">\n          <div className=\"homeworkForm__student\">\n            <p className=\"homeworkForm__student__title\">학생</p>\n            <div className=\"homeworkForm__student__names\">\n              {profilesKey &&\n                profilesKey.map((info, i) => (\n                  <div\n                    className={\n                      newHomework.homeworkStudent == info.name ||\n                      profilesKey.length == 1\n                        ? `homework-form__student-name ${info.color} student-name--selected`\n                        : `homework-form__student-name ${info.color} `\n                    }\n                    key={i}\n                  >\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"homeworkStudent\"\n                        onChange={changeNewHomework}\n                        // onClick={changeNewHomework}\n                        value={info.name}\n                        checked={i == 0 && profilesKey.length == 1 && true}\n                      />\n                      {info.name}\n                    </label>\n                  </div>\n                ))}\n            </div>\n          </div>\n          <div className=\"contentLine\"></div>\n          <div className=\"homeworkForm__date\">\n            <p className=\"homeworkForm__date__title\">날짜</p>\n            <div className=\"homeworkForm__date__content\">\n              {newHomework.homeworkDate}\n            </div>\n          </div>\n          <div className=\"contentLine\"></div>\n          <div className=\"homeworkForm__homework\">\n            <p className=\"homeworkForm__homework__title\">숙제</p>\n            <textarea\n              className=\"homeworkForm__homework__content\"\n              type=\"textarea\"\n              placeholder=\"단어 Day 1 ~ 2\"\n              name=\"homeworkInput\"\n              value={newHomework.homework}\n              onChange={changeNewHomework}\n            ></textarea>\n          </div>\n          <div className=\"contentLine\"></div>\n        </div>\n        <button className=\"homeworkForm__saveBtn\" onClick={homeworkSave}>\n          저장\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default BuildHomework;\n","import React, { useEffect, useRef } from \"react\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport tutorial from \"../../Styles/tutorial.module.scss\";\nconst TutorialForm = ({\n  changeHandler,\n  profileSubmit,\n  profileSave,\n  colorMapArr,\n  dayMapArr,\n  allValues,\n}) => {\n  useEffect(() => {\n    AOS.init();\n    AOS.refresh();\n  }, []);\n  useEffect(() => {\n    console.log(allValues);\n  }, [allValues]);\n  const handleEnter = (e) => {\n    console.log(e.currentTarget);\n    if (e.type == \"click\") {\n      //시작하기 버튼 눌렀을 때 다음 슬라이드로 넘어간다.\n      const form = e.target.form;\n      const index = [...form].indexOf(e.target);\n      form.elements[index + 1].focus();\n      e.preventDefault();\n    } else if (e.key.toLowerCase() === \"enter\") {\n      //인풋창 입력한 뒤 엔터치면 다음 슬라이드로 넘어간다.\n      if (e.target.type == \"checkbox\" || e.target.type == \"radio\") {\n        e.target.checked = !e.target.checked;\n        e.preventDefault();\n        changeHandler(e);\n        return;\n      }\n      const form = e.target.form;\n      const index = [...form].indexOf(e.target);\n      form.elements[index + 1].focus();\n      e.preventDefault();\n    } else if (e.keyCode == \"37\") {\n      const form = e.target.form;\n      const index = [...form].indexOf(e.target);\n      form.elements[index - 1].focus();\n      e.preventDefault();\n    } else if (e.keyCode == \"39\") {\n      const form = e.target.form;\n      const index = [...form].indexOf(e.target);\n      form.elements[index + 1].focus();\n      e.preventDefault();\n    }\n  };\n  const startBtn = useRef();\n  useEffect(() => {\n    startBtn.current.focus();\n  }, []);\n  const duration = \"1200\";\n  return (\n    <div className={tutorial.wrapper}>\n      <form onSubmit={profileSubmit} className={tutorial.wrapper__form}>\n        <div className={tutorial.wrapper__slide}>\n          <div\n            className={tutorial.content}\n            data-aos=\"fade-up\"\n            data-aos-duration={duration}\n          >\n            <div className={tutorial.textContainer}>\n              <p className={tutorial.question}>처음이신가요?</p>\n              <p className={tutorial.question}>학생 프로필을 작성해주세요.</p>\n              <button\n                type=\"button\"\n                ref={startBtn}\n                onClick={handleEnter}\n                onKeyDown={handleEnter}\n              >\n                시작하기\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className={tutorial.wrapper__slide}>\n          <div\n            className={tutorial.content}\n            data-aos=\"fade-up\"\n            data-aos-duration={duration}\n          >\n            <div className={tutorial.content__align}>\n              <p className={tutorial.question}>과외 받는 학생의 이름은.</p>\n              <div>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  title=\"과외 받는 학생의 이름\"\n                  placeholder=\"이수민\"\n                  onChange={changeHandler}\n                  onKeyDown={handleEnter}\n                ></input>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={tutorial.wrapper__slide}>\n          <div\n            className={tutorial.content}\n            data-aos=\"fade-up\"\n            data-aos-duration={duration}\n          >\n            <div className={tutorial.content__align}>\n              <p className={tutorial.question}>수업료는 얼마인지.</p>\n              <div className={tutorial.fee__container}>\n                <div className={tutorial.list}>\n                  <span className={tutorial.title}>시급</span>\n                  <div className={tutorial.content}>\n                    <input\n                      type=\"number\"\n                      name=\"wage\"\n                      min=\"0\"\n                      placeholder=\"2\"\n                      onChange={changeHandler}\n                      onKeyDown={handleEnter}\n                    ></input>\n                    <span>만원</span>\n                  </div>\n                </div>\n                <div className={tutorial.list}>\n                  <span className={tutorial.title}>수업시간</span>\n                  <div className={tutorial.content}>\n                    <input\n                      type=\"number\"\n                      name=\"hour\"\n                      min=\"0\"\n                      placeholder=\"2\"\n                      onChange={changeHandler}\n                      onKeyDown={handleEnter}\n                    ></input>\n                    <span>시간</span>\n                  </div>\n                </div>\n                <div className={tutorial.list}>\n                  <span className={tutorial.title}>주</span>\n                  <div className={tutorial.content}>\n                    <input\n                      type=\"number\"\n                      name=\"onWeek\"\n                      min=\"0\"\n                      placeholder=\"2\"\n                      onChange={changeHandler}\n                      onKeyDown={handleEnter}\n                    ></input>\n                    <span>회</span>\n                  </div>\n                </div>\n                <div className={tutorial.list}>\n                  <span className={tutorial.title}>전체</span>\n                  <div className={tutorial.content}>\n                    <input\n                      type=\"number\"\n                      name=\"totalNum\"\n                      min=\"0\"\n                      placeholder=\"8\"\n                      onChange={changeHandler}\n                      onKeyDown={handleEnter}\n                    ></input>\n                    <span>회</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={tutorial.wrapper__slide}>\n          <div\n            className={tutorial.content}\n            data-aos=\"fade-up\"\n            data-aos-duration={duration}\n          >\n            <div className={tutorial.content__align}>\n              <p className={tutorial.question}>첫 수업은 언제인지.</p>\n              <div>\n                <input\n                  type=\"date\"\n                  name=\"firstDate\"\n                  value={allValues.firstDate}\n                  onChange={changeHandler}\n                  onKeyDown={handleEnter}\n                ></input>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={tutorial.wrapper__slide}>\n          <div\n            className={tutorial.content}\n            data-aos=\"fade-up\"\n            data-aos-duration={duration}\n          >\n            <div className={tutorial.content__align}>\n              <p className={tutorial.question}>언제 수업하는지.</p>\n              <div className={tutorial.days__container}>\n                {dayMapArr.map((el, i) => (\n                  <div className={tutorial.day} key={i}>\n                    <input\n                      type=\"checkbox\"\n                      name=\"days\"\n                      id={`dayChoice${i}`}\n                      value={i}\n                      onClick={changeHandler}\n                      onKeyDown={handleEnter}\n                    ></input>\n                    <label\n                      htmlFor={`dayChoice${i}`}\n                      className={\n                        allValues.days.includes(i)\n                          ? `${tutorial.dayLabel} 레이블 ${tutorial.checked}`\n                          : tutorial.dayLabel\n                      }\n                      name=\"days\"\n                    >\n                      {el}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={tutorial.wrapper__slide}>\n          <div\n            className={tutorial.content}\n            data-aos=\"fade-up\"\n            data-aos-duration={duration}\n          >\n            <div className={tutorial.content__align}>\n              <p className={tutorial.question}>어떤 색으로 칠할지.</p>\n              <div className={tutorial.colors__container}>\n                {colorMapArr.map((el, i) => (\n                  <div\n                    className={\n                      allValues.color == el.value\n                        ? `${tutorial.colors} ${tutorial.checked}`\n                        : `${tutorial.colors}`\n                    }\n                    key={i}\n                  >\n                    <input\n                      type=\"radio\"\n                      className=\"colorInput\"\n                      name=\"color\"\n                      id={`colorChoice${i}`}\n                      value={el.value}\n                      onClick={changeHandler}\n                      onKeyDown={handleEnter}\n                    ></input>\n                    <label\n                      className={tutorial.colorLabel}\n                      htmlFor={`colorChoice${i}`}\n                    >\n                      <div className={`${tutorial.color} ${el.value}`}></div>\n                      {el.name}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={tutorial.wrapper__slide}>\n          <div\n            className={tutorial.content}\n            data-aos=\"fade-up\"\n            data-aos-duration={duration}\n          >\n            <div className={tutorial.textContainer}>\n              <p className={tutorial.question}>이제 다 했어요.</p>\n              <p className={tutorial.question}>확인해보세요.</p>\n              <button onClick={profileSave}>\n                {/* <button className=\"buildProfileSaveBtn\" onClick={profileSave}> */}\n                내 캘린더 보기\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default TutorialForm;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BiHome, BiLeftArrowAlt } from \"react-icons/bi\";\nimport \"../../Styles/tutorial.module.scss\";\nimport \"../../Styles/profileForm.scss\";\nconst ProfileForm = ({\n  changeHandler,\n  profileSubmit,\n  profileSave,\n  colorMapArr,\n  dayMapArr,\n  allValues,\n}) => {\n  const navigate = useNavigate();\n  return (\n    <div className=\"build-profile\">\n      <div className=\"nav-btn--container\">\n        <BiLeftArrowAlt\n          className=\"nav-btn\"\n          onClick={() => navigate(-1)}\n        ></BiLeftArrowAlt>\n        <BiHome\n          className=\"nav-btn\"\n          onClick={() => navigate(process.env.REACT_APP_PATH)}\n        ></BiHome>\n      </div>\n      <div className=\"page-title\">학생 추가</div>\n      <div className=\"titleLine\"></div>\n      <form onSubmit={profileSubmit}>\n        <div className=\"studentInfo\">\n          <div className=\"studentInfo--bttm\">\n            <div className=\"studentInfo__name\">\n              <p className=\"studentInfo__name__title\">이름</p>\n              <input\n                className=\"studentInfo__name__content\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"이수민\"\n                onChange={changeHandler}\n              ></input>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__wage\">\n              <p className=\"studentInfo__wage__title\">수업료</p>\n              <div className=\"studentInfo__wage__content\">\n                <div className=\"studentInfo__wage__args\">\n                  <div className=\"studentInfo__wage__p\">\n                    <span className=\"studentInfo__highlight\">시급</span>\n                    <input\n                      type=\"number\"\n                      name=\"wage\"\n                      placeholder=\"2\"\n                      onChange={changeHandler}\n                    ></input>\n                    만원\n                  </div>\n                  <div className=\"studentInfo__wage__args__onweek\">\n                    <div className=\"studentInfo__wage__p\">\n                      <span className=\"studentInfo__highlight\">횟수</span>\n                      <span className=\"studentInfo__margin\">\n                        <input\n                          type=\"number\"\n                          name=\"hour\"\n                          placeholder=\"2\"\n                          onChange={changeHandler}\n                        ></input>\n                        시간씩\n                      </span>\n                    </div>\n                    <div className=\"studentInfo__wage__p\">\n                      주\n                      <input\n                        type=\"number\"\n                        name=\"onWeek\"\n                        placeholder=\"2\"\n                        onChange={changeHandler}\n                      ></input>\n                      회\n                    </div>\n                  </div>\n                </div>\n                <div className=\"studentInfo__wage__result\">\n                  <div className=\"studentInfo__wage__p\">\n                    <span className=\"studentInfo__highlight\">전체</span>\n                    <span className=\"studentInfo__margin\">\n                      <input\n                        type=\"number\"\n                        name=\"totalNum\"\n                        placeholder=\"8\"\n                        onChange={changeHandler}\n                      ></input>\n                      회\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__first-date\">\n              <p className=\"studentInfo__first-date__title\">시작일</p>\n              <input\n                className=\"studentInfo__first-date__content\"\n                type=\"date\"\n                name=\"firstDate\"\n                value={allValues.firstDate}\n                onChange={changeHandler}\n              ></input>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__days\">\n              <p className=\"studentInfo__days__title\">요일</p>\n              <div className=\"studentInfo__days__content\">\n                {dayMapArr.map((el, i) => (\n                  <div key={i}>\n                    <input\n                      type=\"checkbox\"\n                      name=\"days\"\n                      id={`dayChoice${i}`}\n                      value={i}\n                      onClick={changeHandler}\n                    ></input>\n                    <label htmlFor={`dayChoice${i}`}>\n                      <div\n                        className={\n                          allValues.days.includes(i)\n                            ? \"dayLabel__Div dayChecked\"\n                            : \"dayLabel__Div\"\n                        }\n                      ></div>\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__color\">\n              <p className=\"studentInfo__color__title\">배경색</p>\n              <div className=\"studentInfo__color__inputContainer\">\n                {colorMapArr.map((el, i) => (\n                  <div key={i}>\n                    <input\n                      type=\"radio\"\n                      className=\"colorInput\"\n                      name=\"color\"\n                      id={`colorChoice${i}`}\n                      value={el.value}\n                      onClick={changeHandler}\n                    ></input>\n                    <label className=\"colorLabel\" htmlFor={`colorChoice${i}`}>\n                      <div\n                        className={\n                          allValues.color == el.value\n                            ? `colorLabelDiv ${el.value} colorLabelDarker`\n                            : `colorLabelDiv ${el.value}`\n                        }\n                      ></div>\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__memo\">\n              <p className=\"studentInfo__memo__title\">메모</p>\n              <input\n                className=\"studentInfo__memo__content\"\n                type=\"text\"\n                name=\"memo\"\n                placeholder=\"특이사항\"\n                onChange={changeHandler}\n              ></input>\n            </div>\n            <div className=\"contentLine\"></div>\n          </div>\n        </div>\n        <button className=\"buildProfileSaveBtn\" onClick={profileSave}>\n          저장\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default ProfileForm;\n","import React, { useState } from \"react\";\nimport TutorialForm from \"./TutorialForm.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleShowing, changeId } from \"../../features/modalSlice.js\";\nimport ProfileForm from \"./ProfileForm.js\";\nimport { setProfilesKey, setProfilesLS } from \"../../features/profilesSlice\";\nconst BuildProfile = () => {\n  const profilesKey = useSelector((state) => state.profiles.profiles);\n  const dispatch = useDispatch();\n  const colorMapArr = [\n    { value: \"pinkCoral\", name: \"코랄 핑크\" },\n    { value: \"lightPink\", name: \"라이트 핑크\" },\n    { value: \"deepYellow\", name: \"옐로우\" },\n    { value: \"lightYellow\", name: \"레몬\" },\n    { value: \"lightGreen\", name: \"라이트 그린\" },\n    { value: \"fluorescentGreen\", name: \"그링키\" },\n    { value: \"lightblue\", name: \"스카이\" },\n    { value: \"deepblue\", name: \"펄 블루\" },\n    { value: \"pastelPurple\", name: \"라벤더\" },\n  ];\n  const dayMapArr = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n  const [allValues, setAllValues] = useState({\n    name: \"\",\n    wage: \"\",\n    onWeek: \"\",\n    hour: \"\",\n    totalNum: \"\",\n    firstDate: `${new Date().toISOString().substring(0, 10)}`,\n    days: \"\",\n    color: \"\",\n    memo: \"\",\n    extraLesson: [],\n  });\n\n  const changeHandler = (e) => {\n    if (e.target.name == \"days\") {\n      let checked = e.target.checked;\n      let daysNewValue;\n      if (checked) {\n        daysNewValue = [...allValues.days, Number(e.target.value)];\n      } else {\n        daysNewValue = allValues.days.filter((el) => el != e.target.value);\n      }\n      setAllValues({\n        ...allValues,\n        [e.target.name]: daysNewValue,\n      });\n      return;\n    } else if (\n      e.target.name == \"hour\" ||\n      e.target.name == \"wage\" ||\n      e.target.name == \"onWeek\" ||\n      e.target.name == \"totalNum\"\n    ) {\n      setAllValues({\n        ...allValues,\n        [e.target.name]: parseInt(e.target.value),\n      });\n      return;\n    }\n    setAllValues({ ...allValues, [e.target.name]: e.target.value });\n  };\n\n  // 저장 버튼을 눌렀을 때, 프로필을 다 작성했다면 실행된다.\n  const profileSave = (e) => {\n    const writtenYet = () => {\n      for (let x in allValues) {\n        // 모두 작성하지 않았다면 writtenYet이 true임을 반환한다.\n        if (x == \"memo\") continue; // memo는 작성하지 않아도 된다.\n        if (x == \"extraLesson\") continue; // extraLesson는 작성하지 않아도 된다.\n        if (allValues[x] == \"\") return true;\n      }\n      return false;\n    };\n    if (\n      allValues.name != \"\" &&\n      profilesKey.filter((el) => el.name == allValues.name).length >= 1\n    ) {\n      e.preventDefault();\n      dispatch(toggleShowing());\n      dispatch(changeId(\"sameName\"));\n    } else if (writtenYet()) {\n      e.preventDefault();\n      dispatch(toggleShowing());\n      dispatch(changeId(\"writtenYet\"));\n    } else if (!writtenYet()) {\n      //profileObj에 id를 추가한다.\n      const id = { id: new Date().valueOf() };\n      const profileObjWithId = { ...allValues, ...id };\n      //id까지 추가된 profileObj로 student바꾸기\n      dispatch(setProfilesKey([...profilesKey, profileObjWithId]));\n      dispatch(setProfilesLS());\n      dispatch(toggleShowing());\n      dispatch(changeId(\"successSaving\"));\n    }\n  };\n  const profileSubmit = (e) => {\n    e.preventDefault();\n  };\n  if (profilesKey.length == 0) {\n    return (\n      <TutorialForm\n        changeHandler={changeHandler}\n        profileSubmit={profileSubmit}\n        profileSave={profileSave}\n        colorMapArr={colorMapArr}\n        dayMapArr={dayMapArr}\n        allValues={allValues}\n        setAllValues={setAllValues}\n      ></TutorialForm>\n    );\n  } else {\n    return (\n      <ProfileForm\n        changeHandler={changeHandler}\n        profileSubmit={profileSubmit}\n        profileSave={profileSave}\n        colorMapArr={colorMapArr}\n        dayMapArr={dayMapArr}\n        allValues={allValues}\n        setAllValues={setAllValues}\n      ></ProfileForm>\n    );\n  }\n};\nexport default BuildProfile;\n","import React, { useState } from \"react\";\nimport {\n  BiHome,\n  BiLeftArrowAlt,\n  BiCircle,\n  BiCheckCircle,\n} from \"react-icons/bi\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setProfilesKey, setProfilesLS } from \"../../features/profilesSlice\";\nimport \"../../Styles/basic.scss\";\nimport \"../../Styles/Profiles.scss\";\n\nconst Profiles = () => {\n  let profilesKey = useSelector((state) => state.profiles.profiles);\n  const dispatch = useDispatch();\n  const isShown = useSelector((state) => state.modal.isShown);\n  const navigate = useNavigate();\n  const [deleteState, setDeleteState] = useState(false);\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [checkedProfile, setCheckedProfile] = useState(false);\n\n  const displayCheckBtn = (info) => {\n    if (deleteState == true && selectedDays.includes(info) == false) {\n      return <BiCircle />;\n    } else if (deleteState == true && selectedDays.includes(info)) {\n      return <BiCheckCircle />;\n    } else {\n      return null;\n    }\n  };\n  const studentInfoMap = profilesKey.map((info, i) => (\n    <Link\n      key={i}\n      to={`${process.env.REACT_APP_PATH}/profiles/:${info.id}`}\n      onClick={(e) => deleteState == true && e.preventDefault()}\n    >\n      <div className={`${info.color} profiles__profile`}>\n        <p className=\"profiles__profile__name\">{info.name}</p>\n        <div\n          className=\"propfiles__profile__deleteBtn\"\n          onClick={() => {\n            profileOnClick(info);\n            setCheckedProfile(!checkedProfile);\n          }}\n        >\n          {displayCheckBtn(info)}\n        </div>\n      </div>\n    </Link>\n  ));\n\n  const onDeleteMode = () => {\n    setDeleteState(!deleteState);\n    let daysAfterDelete = profilesKey.filter(\n      (info) => !selectedDays.includes(info)\n    );\n    if (deleteState == true && isShown == false) {\n      dispatch(setProfilesKey(daysAfterDelete));\n      dispatch(setProfilesLS());\n    }\n  };\n\n  const profileOnClick = (info) => {\n    if (deleteState == true && selectedDays.includes(info) == false) {\n      setSelectedDays([...selectedDays, info]);\n    } else if (deleteState == true && selectedDays.includes(info) == true) {\n      const filterUnChecked = selectedDays.filter((el) => el != info);\n      setSelectedDays(filterUnChecked);\n    } else {\n    }\n  };\n\n  return (\n    <div className=\"Profiles\">\n      <div className=\"nav-btn--container\">\n        <BiLeftArrowAlt\n          className=\"nav-btn\"\n          onClick={() => navigate(-1)}\n        ></BiLeftArrowAlt>\n        <BiHome\n          className=\"nav-btn\"\n          onClick={() => navigate(process.env.REACT_APP_PATH)}\n        ></BiHome>\n      </div>\n      <div className=\"profiles__main\">\n        <div>\n          <div\n            className=\"profiles__deleteBtn\"\n            onClick={() => {\n              onDeleteMode();\n            }}\n          >\n            {deleteState ? <h1>완료</h1> : <h1>삭제</h1>}\n          </div>\n        </div>\n        <div className=\"page-title\">모든 프로필</div>\n        <div className=\"titleLine\"></div>\n        <div className=\"profiles__students\">{studentInfoMap}</div>\n      </div>\n    </div>\n  );\n};\nexport default Profiles;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BiHome, BiLeftArrowAlt } from \"react-icons/bi\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../../Styles/basic.scss\";\nimport \"../../Styles/Profiles.scss\";\nconst DetailedProfile = () => {\n  let profilesKey = useSelector((state) => state.profiles.profiles);\n  const navigate = useNavigate();\n  const { profileIdInUrl } = useParams();\n  const profileId = profileIdInUrl.slice(1);\n  const detailedStudent = profilesKey.find((el) => el.id == profileId);\n  return (\n    <div className=\"Profiles\">\n      <div className=\"nav-btn--container\">\n        <BiLeftArrowAlt\n          className=\"nav-btn\"\n          onClick={() => navigate(-1)}\n        ></BiLeftArrowAlt>\n        <BiHome\n          className=\"nav-btn\"\n          onClick={() => navigate(process.env.REACT_APP_PATH)}\n        ></BiHome>\n      </div>\n      <div className=\"profiles__main\">\n        <div className=\"page-title\">상세 프로필</div>\n        <div className=\"titleLine\"></div>\n        <div className=\"studentInfo\">\n          <div className=\"studentInfo--bttm\">\n            <div className=\"studentInfo__name\">\n              <p className=\"studentInfo__name__title\">이름</p>\n              {detailedStudent.name}\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__wage\">\n              <p className=\"studentInfo__wage__title\">수업료</p>\n              <div className=\"studentInfo__wage__content\">\n                <div className=\"studentInfo__wage__args\">\n                  <div className=\"studentInfo__wage__p\">\n                    <span className=\"studentInfo__highlight studentInfo__padding\">\n                      시급\n                    </span>\n                    {detailedStudent.wage}\n                    만원\n                  </div>\n                  <div className=\"studentInfo__wage__args__onweek\">\n                    <span className=\"studentInfo__highlight studentInfo__padding\">\n                      횟수\n                    </span>\n                    <div className=\"studentInfo__wage__p\">\n                      <span className=\"studentInfo__padding\">\n                        {detailedStudent.hour}\n                        시간씩\n                      </span>\n                    </div>\n                    <div className=\"studentInfo__wage__p\">\n                      주{detailedStudent.onWeek}회\n                    </div>\n                  </div>\n                </div>\n                <div className=\"studentInfo__wage__result\">\n                  <div className=\"studentInfo__wage__p\">\n                    <span className=\"studentInfo__highlight studentInfo__padding\">\n                      전체\n                    </span>\n                    <span className=\"studentInfo__padding\">\n                      {detailedStudent.totalNum}회\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__first-date\">\n              <p className=\"studentInfo__first-date__title\">시작일</p>\n              {detailedStudent.firstDate}\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__days\">\n              <p className=\"studentInfo__days__title\">요일</p>\n              <div className=\"studentInfo__days__content\">\n                <div>{detailedStudent.days}</div>\n              </div>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__color\">\n              <p className=\"studentInfo__color__title\">배경색</p>\n              <div>{detailedStudent.color}</div>\n            </div>\n            <div className=\"contentLine\"></div>\n            <div className=\"studentInfo__memo\">\n              <p className=\"studentInfo__memo__title\">메모</p>\n              <div>{detailedStudent.memo}</div>\n            </div>\n            <div className=\"contentLine\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default DetailedProfile;\n","import React from \"react\";\nconst NotFound = () => {\n  return (\n    <div className=\"build-homework\">\n      <div className=\"page-title\">Not Found</div>\n    </div>\n  );\n};\nexport default NotFound;\n","export default __webpack_public_path__ + \"static/media/check.00d9aca7.svg\";","export default __webpack_public_path__ + \"static/media/error.c3f8d911.svg\";","import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from \"react-router-dom\";\nimport { toggleShowing } from \"../features/modalSlice\";\nimport check from \"../images/check.svg\";\nimport error from \"../images/error.svg\";\nimport modal from \"../Styles/modal.module.scss\";\nconst ModalButton = ({ thisModal }) => {\n  const dispatch = useDispatch();\n  const closeModal = () => {\n    dispatch(toggleShowing());\n    document.body.style.overflow = \"auto\";\n  };\n  const btnType = thisModal.buttonType;\n  const btnLinks = thisModal.buttonLinks;\n  // 버튼 하나만 있다.\n  if (btnType == \"one\") {\n    return (\n      <button className={modal.ok_btn} onClick={closeModal} autoFocus>\n        {btnLinks != null ? <Link to={btnLinks}>홈으로</Link> : \"닫기\"}\n      </button>\n    );\n  }\n  // 왼쪽, 오른쪽 총 두개의 버튼이 있다.\n  if (btnType == \"two\") {\n    return (\n      <>\n        <button className={modal.cancel_btn} onClick={closeModal}>\n          <Link to={btnLinks[0]} className=\"link-in-btn\">\n            홈으로\n          </Link>\n        </button>\n        <button className={modal.do_btn} onClick={closeModal}>\n          <Link to={btnLinks[1]}>추가하기</Link>\n        </button>\n      </>\n    );\n  }\n};\nconst Modal = () => {\n  document.body.style.overflow = \"hidden\";\n  const id = useSelector((state) => state.modal.id);\n  const total = useSelector((state) => state.modal.total);\n  const thisModal = total.filter((el) => {\n    return el.id == id;\n  })[0];\n  const mainText = thisModal.mainText;\n  const subText = thisModal.subText;\n  const mode = thisModal.mode;\n\n  document.body.addEventListener(\"keypress\", function (e) {\n    if (e.key === \"Enter\") console.log(e.target);\n  });\n  return ReactDOM.createPortal(\n    <div className={modal.overlay}>\n      <div\n        className={\n          mode == \"Success\"\n            ? `${modal.content} ${modal.success_container}`\n            : `${modal.content} ${modal.error_container}`\n        }\n      >\n        <div className={modal.icon_wrap}>\n          <img\n            className={modal.icon}\n            src={mode == \"Success\" ? check : error}\n          ></img>\n        </div>\n        <p className={modal.text_main}>{mainText}</p>\n        <p className={modal.text_sub}>{subText}</p>\n        <ModalButton thisModal={thisModal}></ModalButton>\n      </div>\n    </div>,\n    document.getElementById(\"modal-root\")\n  );\n};\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Calendar from \"./Components/Calendar.js\";\nimport BuildHomework from \"./Components/BuildHomework\";\nimport BuildProfile from \"./Components/Profiles/BuildProfile\";\nimport Profiles from \"./Components/Profiles/Profiles\";\nimport DetailedProfile from \"./Components/Profiles/DetailedProfile\";\nimport NotFound from \"./Components/NotFound\";\nimport Modal from \"./Components/Modal\";\nimport { setProfilesKey } from \"./features/profilesSlice.js\";\nimport \"./Styles/reset.scss\";\nimport \"./App.scss\";\nimport \"./Styles/_mediaQuery.scss\";\nfunction App() {\n  const dispatch = useDispatch();\n  const isShown = useSelector((state) => state.modal.isShown);\n  if (typeof window !== \"undefined\") {\n    // LS에서 직접 모든 데이터를 삭제하면 profiles 리덕스 스토어도 null이 된다.\n    // null 데이터를 렌더링하면 문제가 생기므로 []로 값을 설정해준다.\n    const saved = window.localStorage.getItem(\"profilesKey\");\n    if (saved == null) {\n      window.localStorage.setItem(\"profilesKey\", JSON.stringify([]));\n      dispatch(setProfilesKey([]));\n    }\n  }\n  const [homeworkInfo, setHomeworkInfo] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const saved = window.localStorage.getItem(\"homeworksKey\");\n      if (saved !== null) {\n        return JSON.parse(saved);\n      } else {\n        return [];\n      }\n    }\n  });\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route\n          path={process.env.REACT_APP_PATH}\n          element={\n            <Calendar homework={homeworkInfo} setHomework={setHomeworkInfo} />\n          }\n        ></Route>\n        <Route\n          path={`${process.env.REACT_APP_PATH}/homeworkview/:clickedDate`}\n          element={\n            <BuildHomework\n              homework={homeworkInfo}\n              setHomework={setHomeworkInfo}\n            ></BuildHomework>\n          }\n        ></Route>\n        <Route\n          path={`${process.env.REACT_APP_PATH}/buildprofile`}\n          element={<BuildProfile></BuildProfile>}\n        ></Route>\n        <Route\n          path={`${process.env.REACT_APP_PATH}/profiles`}\n          element={<Profiles></Profiles>}\n        ></Route>\n        <Route\n          path={`${process.env.REACT_APP_PATH}/profiles/:profileIdInUrl`}\n          element={<DetailedProfile></DetailedProfile>}\n        ></Route>\n        <Route path=\"*\" element={<NotFound></NotFound>}></Route>\n      </Routes>\n      {isShown && <Modal />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport modalSlice from \"../features/modalSlice\";\nimport profilesSlice from \"../features/profilesSlice\";\nimport clickedDateSlice from \"../features/clickedDateSlice\";\nimport calendarSlice from \"../features/calendarSlice\";\nexport const store = configureStore({\n  reducer: {\n    modal: modalSlice,\n    profiles: profilesSlice,\n    clickedDate: clickedDateSlice,\n    calendar: calendarSlice,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n        <div id=\"modal-root\"></div>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}