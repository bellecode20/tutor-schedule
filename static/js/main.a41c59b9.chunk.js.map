{"version":3,"sources":["Components/Calendar.js","Components/ErrorModal.js","Components/BuildHomework.js","Components/BuildProfile.js","Components/Profiles.js","Components/DetailedProfile.js","Components/NotFound.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Calendar","student","homework","setHomework","useState","Date","today","setToday","date","getDate","month","getDay","getMonth","year","getFullYear","prevLastDate","startDateInfo","lastDateInfo","lastDate","dates","i","push","prevDates","dayOfStartDate","prevVisibleDates","slice","lastVisibleDates","개수","fullDatesOfMonth","concat","daysToNumArray","fullDayOfThisDate","onlyOneInCalendar","indexOf","lastIndexOf","lateInMonth","earlyInMonth","arr","idx","displayHomeworks","setDisplayHomeworks","selectedDate","setSelectedDate","showHomeworks","e","targetDate","target","getAttribute","targetDateArr","split","map","el","length","useEffect","localStorage","setItem","JSON","stringify","displayMenu","setDisplayMenu","showMenu","className","onClick","to","info","studentIndex","days","includes","Number","firstDate","substring","findIndex","x","color","id","homeworkDate","homeworkStudent","console","log","afterDelete","parse","getItem","filter","deleteHomework","homeworkInput","ErrorModal","setModalShow","setMainModalText","mainModalText","subModalText","closeModal","xmlns","viewBox","d","sameName","writtenYet","successSaving","noStudentInHomework","askDelete","BuildHomework","modalShow","setSubModalText","navigate","useNavigate","clickedDate","useParams","homeworkInfoObj","sethomeworkInfoObj","homeworkStudentValue","sethomeworkStudentValue","homeworkStudentObj","sethomeworkStudentObj","selectStudentForhomework","innerText","thisDayArrFromUrl","homeworkDateValue","sethomeworkDateValue","homeworkDateObj","sethomeworkDateObj","homeworkInputValue","sethomeworkInputValue","homeworkInputObj","sethomeworkInputObj","onSubmit","preventDefault","name","type","min","value","onChange","placeholder","valueOf","colorObj","find","BuildProfile","setStudent","schoolValue","setSchoolValue","school","schoolObj","setSchoolObj","nameValue","setNameValue","nameObj","setNameObj","ageValue","setAgeValue","age","ageObj","setAgeObj","wageValue","setWageValue","wage","wageObj","setWageObj","onWeekValue","setOnWeekValue","onWeekObj","setOnWeekObj","onWeek","hourValue","setHourValue","hourObj","setHourObj","hour","totalNumValue","setTotalNumValue","totalNumObj","setTotalNumObj","totalNum","totalWageValue","setTotalWageValue","totalWageObj","setTotalWageObj","totalWage","toISOString","firstDateValue","setFirstDateValue","firstDateObj","setFirstDateObj","text","dayMapArr","dayValue","setDayValue","dayObj","setDayObj","dayOnClick","checked","colorMapArr","setColorObj","colorOnClick","memoValue","setMemoValue","memo","memoObj","setMemoObj","profileObj","parseInt","htmlFor","프로필배열","profileObjWithId","Profiles","deleteState","setDeleteState","selectedDays","setSelectedDays","checkedProfile","setCheckedProfile","displayCheckBtn","studentInfoMap","profileOnClick","filterUnChecked","daysAfterDelete","onDeleteMode","DetailedProfile","HomeRoundedIcon","profileId","profileIdInUrl","detailedStudent","NotFound","App","window","saved","homeworkInfo","setHomeworkInfo","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a41c59b9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  BiX,\r\n  BiPlus,\r\n  BiMenu,\r\n  BiChevronLeft,\r\n  BiChevronRight,\r\n  BiTrash,\r\n} from \"react-icons/bi\";\r\nimport \"../Styles/basic.scss\";\r\nimport \"../Styles/calendar.scss\";\r\nconst Calendar = ({ student, homework, setHomework }) => {\r\n  let [today, setToday] = useState(new Date());\r\n  let date = today.getDate();\r\n  let day = today.getDay();\r\n  let month = today.getMonth() + 1;\r\n  let year = today.getFullYear();\r\n\r\n  //저번 달 정보들을 선언한다.\r\n  let prevDateInfo = new Date(year, month - 1, 0);\r\n  let prevLastDate = prevDateInfo.getDate();\r\n\r\n  //이번 달의 첫번째 날짜를 찾아낸다.\r\n  let startDateInfo = new Date(year, month - 1, 1);\r\n  //이번 달의 마지막 날짜와 요일을 찾아낸다.\r\n  let lastDateInfo = new Date(year, month, 0);\r\n  let lastDate = lastDateInfo.getDate();\r\n\r\n  //이번 달 1일~ 31일(혹은 30일)까지를 배열에 넣는다.\r\n  const dates = [];\r\n  for (let i = 1; i <= lastDate; i++) {\r\n    dates.push(i);\r\n  }\r\n\r\n  //저번 달 1일 ~ 31일(혹은 30일)까지를 배열에 넣는다.\r\n  const prevDates = [];\r\n  for (let i = 1; i <= prevLastDate; i++) {\r\n    prevDates.push(i);\r\n  }\r\n\r\n  //저번 달 날짜 중에서, 이번 달 달력에 보이는 날짜들을 배열에 넣는게 목표이다.\r\n  // 1. 요일 번호를 찾는다. 요일 번호는 이번 달의 첫번째 날 요일(숫자)랑 똑같다.\r\n  // 2. 저번달 날짜들 배열을 만들고, 거기에서 요일 번호만큼의 개수만큼 배열 값에서 따로 자른다(뒤에서부터 자른다.).\r\n  let dayOfStartDate = startDateInfo.getDay();\r\n  let prevVisibleDates = prevDates.slice(-dayOfStartDate);\r\n\r\n  //다음 달 날짜 중에서, 이번 달 달력에 보이는 날짜들을 배열에 넣는게 목표이다.\r\n  // 1. 요일 번호를 찾는다.\r\n  let dayOfLastDate = lastDateInfo.getDay();\r\n  // 2. 보이는 날짜들이 몇 개 인지 구하고, 그 개수만큼 배열에 1을 추가하는 반복문을 돌린다.\r\n  let lastVisibleDates = [];\r\n  const 개수 = 7 - dayOfLastDate - 1;\r\n  for (let i = 1; i <= 개수; i++) {\r\n    lastVisibleDates.push(i);\r\n  }\r\n\r\n  //저번 달, 이번 달, 다음 달 날짜 배열들을 다 합쳐서 이번 달력 배열을 만든다.\r\n  //이번달이 일요일부터 시작하면, 저번 달 날짜 배열은 합치지 않는다.\r\n  let fullDatesOfMonth = [];\r\n  if (dayOfStartDate == 0) {\r\n    fullDatesOfMonth = dates.concat(lastVisibleDates);\r\n  } else {\r\n    fullDatesOfMonth = prevVisibleDates.concat(dates, lastVisibleDates);\r\n  }\r\n\r\n  //버튼 눌렀을 때 이전 달로 간다.\r\n  function toPrevMonth() {\r\n    setToday(new Date(year, month - 2, date));\r\n  }\r\n\r\n  //버튼 눌렀을 때 다음 달로 간다.\r\n  function toNextMonth() {\r\n    setToday(new Date(year, month, date));\r\n  }\r\n\r\n  ////요일 attr 정하기\r\n  const daysToNumArray = [\r\n    0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3,\r\n    4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6,\r\n  ];\r\n\r\n  const fullDayOfThisDate = (date, i) => {\r\n    const onlyOneInCalendar =\r\n      fullDatesOfMonth.indexOf(date) == fullDatesOfMonth.lastIndexOf(date);\r\n    const lateInMonth = 22 <= date && date <= 31;\r\n    const earlyInMonth = 1 <= date && date <= 6;\r\n    const arr = [];\r\n    let idx = fullDatesOfMonth.indexOf(date);\r\n\r\n    //date가 fullDatesOfMonth안에서 존재하지 않을 떄까지 반복문을 실행한다.\r\n    while (idx != -1) {\r\n      //date를 배열에 넣는다.\r\n      arr.push(idx);\r\n      //이제 방금 넣은 값 뒤에서부터 반복문을 실행해야 하므로, idx를 방금 넣은 값의 바로 뒷 값으로 다시 정의한다.\r\n      idx = fullDatesOfMonth.indexOf(date, idx + 1);\r\n    }\r\n    //다음달 날짜가 이번달 마지막 줄에 껴있을 때\r\n    if (!onlyOneInCalendar && i >= 7 && earlyInMonth && arr.indexOf(i) == 1) {\r\n      return `${year}-${month + 1 == 13 ? 1 : month + 1}-${date}`;\r\n    }\r\n    //저번달 날짜가 이번달 첫째줄에 껴있을 때\r\n    else if (\r\n      !onlyOneInCalendar &&\r\n      i <= 6 &&\r\n      lateInMonth &&\r\n      arr.indexOf(i) == 0\r\n    ) {\r\n      return `${year}-${month - 1 == 0 ? 12 : month - 1}-${date}`;\r\n    } //22~31일이 이번달 첫째 줄에 나올때. 저번달 날짜가 이번달에 처음 나올 때이다.\r\n    else if (onlyOneInCalendar && lateInMonth && i <= 6) {\r\n      return `${year}-${month - 1 == 0 ? 12 : month - 1}-${date}`;\r\n    } else {\r\n      return `${year}-${month}-${date}`;\r\n    }\r\n  };\r\n\r\n  //캘린더에서 날짜 칸을 누르면 숙제 목록 창이 뜬다.\r\n  const [displayHomeworks, setDisplayHomeworks] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n\r\n  //클릭한 칸의 날짜에 해당하는 homework데이터를 보여주어야 한다.\r\n  //클릭한 칸의 attribute에서 날짜 정보를 얻는다. 한자리수는 앞에 0을 붙여준다.\r\n  const showHomeworks = (e) => {\r\n    setDisplayHomeworks(true);\r\n    const targetDate = e.target.getAttribute(\"data-full-date\");\r\n    if (targetDate != null) {\r\n      const targetDateArr = targetDate\r\n        .split(\"-\")\r\n        .map((el) => (el.length == 1 ? \"0\".concat(el) : el));\r\n      setSelectedDate(\r\n        `${targetDateArr[0]}-${targetDateArr[1]}-${targetDateArr[2]}`\r\n      );\r\n    }\r\n  };\r\n\r\n  //클릭한 숙제를 삭제한다.\r\n  const deleteHomework = (info) => {\r\n    console.log(info.id);\r\n    const getHomeworks = JSON.parse(localStorage.getItem(\"homeworksKey\"));\r\n    const afterDelete = getHomeworks.filter((el) => el.id != info.id);\r\n    console.log(afterDelete);\r\n    setHomework(afterDelete);\r\n  };\r\n  useEffect(() => {\r\n    localStorage.setItem(\"homeworksKey\", JSON.stringify(homework), [homework]);\r\n  });\r\n\r\n  const [displayMenu, setDisplayMenu] = useState(false);\r\n  const showMenu = () => {\r\n    setDisplayMenu(!displayMenu);\r\n  };\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div onClick={showMenu} className=\"calendar__show-menu-btn nav-btn\">\r\n        <BiMenu className=\"\"></BiMenu>\r\n      </div>\r\n      {displayMenu == true ? (\r\n        <div className=\"calendar__menu\">\r\n          <div onClick={showMenu} className=\"calendar__menu__close-btn nav-btn\">\r\n            <BiX className=\"\"></BiX>\r\n          </div>\r\n          <Link\r\n            to=\"/tutor-schedule/buildprofile\"\r\n            className=\"link--remove-style\"\r\n          >\r\n            <div className=\"calendar__menu__list\">학생 추가</div>\r\n          </Link>\r\n          <div className=\"menu__line\"></div>\r\n          <Link to=\"/tutor-schedule/profiles\" className=\"link--remove-style\">\r\n            <div className=\"calendar__menu__list\">학생 모아보기</div>\r\n          </Link>\r\n          <div className=\"menu__line\"></div>\r\n          <Link\r\n            to={`/tutor-schedule/homeworkview/:${year}-${month}-${date}`}\r\n            className=\"link--remove-style\"\r\n          >\r\n            <div className=\"calendar__menu__list\">숙제 추가</div>\r\n          </Link>\r\n          <div className=\"menu__line\"></div>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"캘린더\">\r\n        <div className=\"calendarTop\">\r\n          <div className=\"calendarTop__this-month\">\r\n            <button className=\"calendarTop__button--left\" onClick={toPrevMonth}>\r\n              <BiChevronLeft className=\"nav-btn\"></BiChevronLeft>\r\n            </button>\r\n            <p>{month}월</p>\r\n            <button\r\n              className=\"calendarTop__button--right\"\r\n              onClick={toNextMonth}\r\n            >\r\n              <BiChevronRight className=\"nav-btn\"></BiChevronRight>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"calendarBttm\">\r\n          <div className=\"days\">\r\n            <div className=\"sunday\">일</div>\r\n            <div className=\"monday\">월</div>\r\n            <div className=\"tuesday\">화</div>\r\n            <div className=\"wednesday\">수</div>\r\n            <div className=\"thursday\">목</div>\r\n            <div className=\"friday\">금</div>\r\n            <div className=\"saturday\">토</div>\r\n          </div>\r\n          <div className=\"dates\">\r\n            {fullDatesOfMonth.map((date, i) => (\r\n              <div\r\n                className=\"dates__date\"\r\n                key={i}\r\n                data-요일={daysToNumArray[i]}\r\n                data-full-date={fullDayOfThisDate(date, i)}\r\n                onClick={showHomeworks}\r\n              >\r\n                {date}\r\n                {student.map((info, studentIndex) => (\r\n                  <div key={info.id}>\r\n                    {/* year도 같고, month도 같을 때, 달력 두번째 줄부터는 findIndex */}\r\n                    {(info.days.includes(daysToNumArray[i]) &&\r\n                      year == Number(info.firstDate.substring(0, 4)) &&\r\n                      month == Number(info.firstDate.substring(5, 7)) &&\r\n                      fullDatesOfMonth.findIndex(\r\n                        (x) => x == Number(info.firstDate.substring(8, 10))\r\n                      ) >= 7 &&\r\n                      i >=\r\n                        fullDatesOfMonth.findIndex(\r\n                          (x) => x == Number(info.firstDate.substring(8, 10))\r\n                        )) ||\r\n                    //year도 같고, month도 같을 때, 달력 첫번째 줄은 lastIndexOf\r\n                    (info.days.includes(daysToNumArray[i]) &&\r\n                      year == Number(info.firstDate.substring(0, 4)) &&\r\n                      month == Number(info.firstDate.substring(5, 7)) &&\r\n                      fullDatesOfMonth.findIndex(\r\n                        (x) => x == Number(info.firstDate.substring(8, 10))\r\n                      ) <= 6 &&\r\n                      i >=\r\n                        fullDatesOfMonth.lastIndexOf(\r\n                          Number(info.firstDate.substring(8, 10))\r\n                        )) ||\r\n                    //year은 같고, month는 다를 때\r\n                    (info.days.includes(daysToNumArray[i]) &&\r\n                      year == Number(info.firstDate.substring(0, 4)) &&\r\n                      month > Number(info.firstDate.substring(5, 7))) ||\r\n                    //year이 더 크고(이전일 때), month가 작을 때\r\n                    (info.days.includes(daysToNumArray[i]) &&\r\n                      year > Number(info.firstDate.substring(0, 4)) &&\r\n                      month < Number(info.firstDate.substring(5, 7))) ||\r\n                    //year이 더 크고(이전일 때), month가 같을 때(이전 같은 달)\r\n                    (info.days.includes(daysToNumArray[i]) &&\r\n                      year > Number(info.firstDate.substring(0, 4)) &&\r\n                      month == Number(info.firstDate.substring(5, 7)) &&\r\n                      i >= 7 &&\r\n                      i >=\r\n                        fullDatesOfMonth.findIndex(\r\n                          (x) => x == Number(info.firstDate.substring(8, 10))\r\n                        )) ? (\r\n                      <div className={`${info.color} studentInCal`}></div>\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {displayHomeworks == true ? (\r\n        <div className=\"calendar__homework-lists\">\r\n          <div\r\n            className=\"calendar__homework-lists__close-btn nav-btn\"\r\n            onClick={() => setDisplayHomeworks(false)}\r\n          >\r\n            <BiX></BiX>\r\n          </div>\r\n          <div className=\"calendar__homework-lists__date\">{selectedDate}</div>\r\n          {homework.map((info, i) =>\r\n            selectedDate == info.homeworkDate ? (\r\n              <div key={i} className=\"calendar__homework-lists__list\">\r\n                <div\r\n                  className={`calendar__homework-list__student ${info.color}`}\r\n                >\r\n                  {info.homeworkStudent}\r\n                  <div onClick={() => deleteHomework(info)}>\r\n                    <BiTrash></BiTrash>\r\n                  </div>\r\n                </div>\r\n                <div className=\"calendar__homework-list__content\">\r\n                  {info.homeworkInput}\r\n                </div>\r\n              </div>\r\n            ) : null\r\n          )}\r\n        </div>\r\n      ) : null}\r\n      <Link\r\n        to={`/tutor-schedule/homeworkview/:${year}-${month}-${date}`}\r\n        className=\"link--remove-style\"\r\n      >\r\n        <div className=\"calendar__add-hwmk-btn\">\r\n          <BiPlus className=\"calendar__add-hwmk-btn__icon nav-btn\"></BiPlus>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorModal = ({\r\n  setModalShow,\r\n  setMainModalText,\r\n  mainModalText,\r\n  subModalText,\r\n}) => {\r\n  const closeModal = () => {\r\n    setModalShow(false);\r\n  };\r\n  console.log(mainModalText);\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <div className=\"modal__overlay\"></div>\r\n      <div className=\"modal__content\">\r\n        <div className=\"modal__content__icon-wrap\">\r\n          {mainModalText == \"sameName\" ||\r\n          mainModalText == \"writtenYet\" ||\r\n          mainModalText == \"noStudentInHomework\" ? (\r\n            <svg\r\n              className=\"modal__content__icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 64 64\"\r\n            >\r\n              <path d=\"M38.654 44.556C39.638 43.114 43 4.568 43 4.166S40.294 0 32.996 0 22.01 3.446 22.01 3.446c-.247 1.442 4.673 40.23 5.985 41.59 1.312 1.363 9.675.963 10.66-.48zM25.002 4.648c.052-.397 4.387-2.564 8.24-2.324 3.855.24 7.504 2.604 7.545 3.005.04.4-.37 3.004-.492 2.924-.123-.08-6.355-4.608-6.642-4.568-.287.04-.78 1.042-.41 1.282.37.24 6.765 4.768 6.765 4.928 0 .16-.41 2.324-.41 2.324s-6.847-5.21-7.052-5.21c-.205 0-.615 1.123-.41 1.283.205.16 7.34 5.13 7.34 5.29 0 .16-.165 3.204-.288 3.204-.123 0-6.56-5.69-6.806-5.65-.246.04-.574 1.322-.37 1.442.206.12 7.135 5.85 7.258 6.13.123.28-.287 3.124-.287 3.124s-7.01-5.69-7.134-5.69c-.124 0-.493 1.282-.288 1.442.205.16 7.298 6.01 7.298 6.25s.123 2.846-.164 2.766c-.287-.08-6.314-5.13-6.6-5.13-.288 0-.698.963-.37 1.283.328.32 6.6 5.49 6.642 5.69.04.2-.246 3.566-.246 3.566s-5.904-6.25-6.068-6.25-.37 1.523-.123 1.683c.247.16 5.864 6.01 5.946 6.21.082.2-.164 2.325-.164 2.325s-5.043-4.928-5.207-4.928-.656 1.482-.533 1.603c.123.12 5.453 5.01 5.453 5.01l-.205 2.203-5.084-4.287s-.41 1.24-.328 1.44c.082.2 5.125 4.248 5.125 4.41 0 .16-.205 1.44-.328 1.48-.123.04-.82.24-1.107.12-.287-.12-3.24-2.684-3.362-2.644-.123.04-.492 1.042-.37 1.202.124.16 1.682 1.723 1.682 1.723s-2.952.16-3.157-.12c-.204-.277-5.575-36.338-5.288-38.542zm7.667 45.145c-3.635.253-8.005 2.46-7.955 7.505.05 5.046 3.915 6.482 6.508 6.673 2.593.193 8.973-.454 9.276-5.555.41-6.887-2.83-8.97-7.83-8.622zm-.988 11.89c-2.294 0-3.99-2.428-4.04-4.344-.05-1.917 1.347-4.727 5.187-4.855 1.744-.058 5.086-.156 5.086 5.173 0 3.646-3.94 4.024-6.234 4.024zm-.858-7.867c-1.696.575-1.895 3.32-1.696 4.343.2 1.02 1.397.83 1.646.638.25-.192 0-.32-.15-1.533-.15-1.214.997-2.62 1.197-2.81.2-.192-.457-.82-.996-.64z\" />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              className=\"modal__content__icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 64 64\"\r\n            >\r\n              <path d=\"M64 13.435c-.05-.69-9.295-5.66-9.442-5.66-.147 0-10.714 17.672-10.86 17.72-.148.05-3.915-20.183-4.404-21.364C38.804 2.95.09 10.156.01 10.778c-.342 2.658 7.387 48.49 8.22 49.18.83.688 40.31-6.794 40.604-7.237.294-.443-1.614-10.19-1.565-10.93.048-.738 16.78-27.666 16.73-28.355zM9.795 57.838c-.195-.492-7.778-43.025-7.73-45.585.004-.156 35.47-5.81 35.665-5.514.196.294 4.207 21.364 4.158 21.758-.05.394-2.935 4.184-3.082 4.184-.147 0-14.58-11.372-14.92-11.372-.343 0-8.66 8.812-8.513 9.353.147.542 25.243 19.987 25.733 20.233.49.246 4.354-6.006 4.5-5.76.148.246.735 6.203.735 6.203S9.99 58.33 9.796 57.837zM47 38.024c-.183 0-2.862-1.994-3.01-1.994-.146 0-.586 1.108-.586 1.108l2.825 2.03-1.212 1.884s-2.715-1.81-2.9-1.81c-.182 0-.806.776-.55.998.258.222 2.936 1.772 2.9 1.957-.037.185-1.32 2.363-1.43 2.363-.11 0-3.633-2.917-3.743-2.917-.11 0-.954.628-.624.997.33.37 3.56 2.99 3.523 3.1-.037.112-.697 1.995-.99 1.884-.295-.11-23.043-17.02-22.896-17.61.147-.592 5.296-5.6 5.675-5.847.29-.19 14.236 12.16 14.97 11.667.734-.492 16.144-24.96 16.584-24.86.44.098 5.235 3.397 5.235 3.397L52.21 28.55s-1.54-.86-1.65-.825c-.11.037-.55.85-.368.96.183.11 1.394.812 1.394.812s-.99 2.363-1.1 2.326c-.11-.036-1.652-.996-1.8-.996s-.586.923-.476.997c.11.075 1.724 1.146 1.724 1.146l-1.137 2.104s-2.275-1.33-2.385-1.33c-.11 0-.66 1.035-.514 1.146.147.11 2.165 1.477 2.165 1.477s-.88 1.66-1.063 1.66zm-11.74-25.55c-.074-.11-27.634 3.535-27.886 3.915-.073.11-.183 1.18 0 1.328.183.148 27.995-3.58 28.142-3.766.146-.185-.184-1.366-.257-1.477zM19.297 24.4c0-.11-10.31 1.33-10.75 1.55 0 0 .147.998.257 1.22.11.22 9.393-1.33 9.613-1.404.22-.074.88-1.255.88-1.366zm10.017.037s7.155-1.034 7.19-1.145c.038-.11-.182-1.33-.292-1.33-.11 0-8.072 1.256-8.402 1.33-.18.04 1.505 1.145 1.505 1.145zM21.17 37.803c-.184-.074-10.236 1.258-10.495 1.403-.33.185-.073.997.073 1.145.147.15 11.227-1.587 11.484-1.697.258-.112-.88-.777-1.063-.85zm7.007 5.87c-.22-.148-16.33 2.755-16.584 2.806-.367.073 0 .81.183 1.033.183.222 17.135-2.843 17.318-2.954s-.696-.74-.917-.887zm3.89 5.02c-.257-.11-19.362 3.068-19.667 3.287-.257.185.037 1.034.293 1.145.257.11 19.923-3.803 19.923-3.803s-.293-.517-.55-.628zm-10.31-18.79s.476-.813.55-.998c.072-.185-.548-.835-.66-.812-.184.037-1.432 1.735-1.652 2.068-.22.333 4.22 3.36 4.586 3.545.368.185.515-.406.588-.775.074-.37-3.412-3.028-3.412-3.028z\" />\r\n            </svg>\r\n          )}\r\n        </div>\r\n        <div className=\"modal__text--main\">\r\n          {\r\n            {\r\n              sameName: \"앗...\",\r\n              writtenYet: \"앗...\",\r\n              successSaving: \"저장~\",\r\n              noStudentInHomework: \"앗...\",\r\n              askDelete: \"정말로요?\",\r\n            }[mainModalText]\r\n          }\r\n        </div>\r\n        <div className=\"modal__text--sub\">\r\n          {\r\n            {\r\n              sameName: \"똑같은 이름의 학생이 있어요\",\r\n              writtenYet: \"작성하지 않은 항목이 있어요\",\r\n              successSaving: \"저장했어요\",\r\n              noStudentInHomework: \"숙제를 낼 학생이 없어요\",\r\n              askDelete: \"삭제시 되돌릴 수 없어요\",\r\n            }[subModalText]\r\n          }\r\n        </div>\r\n        {\r\n          {\r\n            sameName: (\r\n              <div className=\"modal__okBtn\" onClick={closeModal}>\r\n                닫기\r\n              </div>\r\n            ),\r\n            writtenYet: (\r\n              <div className=\"modal__okBtn\" onClick={closeModal}>\r\n                닫기\r\n              </div>\r\n            ),\r\n            successSaving: (\r\n              <div className=\"modal__okBtn\" onClick={closeModal}>\r\n                닫기\r\n              </div>\r\n            ),\r\n            noStudentInHomework: (\r\n              <Link\r\n                to=\"/tutor-schedule/buildprofile\"\r\n                className=\"modal__do-btn\"\r\n                onClick={() => {\r\n                  closeModal();\r\n                  setMainModalText(\"\");\r\n                }}\r\n              >\r\n                <div>추가하기</div>\r\n              </Link>\r\n            ),\r\n          }[mainModalText]\r\n        }\r\n        {\r\n          {\r\n            noStudentInHomework: (\r\n              <Link\r\n                to=\"/tutor-schedule\"\r\n                className=\"modal__cancel-btn\"\r\n                onClick={closeModal}\r\n              >\r\n                <div>홈으로</div>\r\n              </Link>\r\n            ),\r\n          }[mainModalText]\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ErrorModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport { BiHome, BiLeftArrowAlt, BiErrorCircle } from \"react-icons/bi\";\r\nimport ErrorModal from \"./ErrorModal.js\";\r\n\r\nimport \"../Styles/BuildHomework.scss\";\r\nconst BuildHomework = ({\r\n  student,\r\n  homework,\r\n  setHomework,\r\n  modalShow,\r\n  setModalShow,\r\n  mainModalText,\r\n  setMainModalText,\r\n  subModalText,\r\n  setSubModalText,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const { clickedDate } = useParams();\r\n  const [homeworkInfoObj, sethomeworkInfoObj] = useState();\r\n  const [homeworkStudentValue, sethomeworkStudentValue] = useState(\"\");\r\n  const [homeworkStudentObj, sethomeworkStudentObj] = useState({});\r\n  const selectStudentForhomework = (e) => {\r\n    sethomeworkStudentValue(e.target.innerText);\r\n  };\r\n  useEffect(\r\n    () => sethomeworkStudentObj({ homeworkStudent: homeworkStudentValue }),\r\n    [homeworkStudentValue]\r\n  );\r\n\r\n  //날짜의 기본 값은 유저가 캘린더에서 클릭한 날짜, 즉 주소창에 있는 날짜로 설정한다.\r\n  const thisDayArrFromUrl = clickedDate\r\n    .slice(1)\r\n    .split(\"-\")\r\n    .map((dates) => (dates.length == 1 ? \"0\".concat(dates) : dates));\r\n  const [homeworkDateValue, sethomeworkDateValue] = useState(\r\n    `${thisDayArrFromUrl[0]}-${thisDayArrFromUrl[1]}-${thisDayArrFromUrl[2]}`\r\n  );\r\n\r\n  //유저가 입력한 날짜를 객체로 만든다.\r\n  const [homeworkDateObj, sethomeworkDateObj] = useState({});\r\n  const homeworkDateChg = (e) => {\r\n    sethomeworkDateValue(e.target.value);\r\n  };\r\n  useEffect(\r\n    () => sethomeworkDateObj({ homeworkDate: homeworkDateValue }),\r\n    [homeworkDateValue]\r\n  );\r\n\r\n  const [homeworkInputValue, sethomeworkInputValue] = useState(\"\");\r\n  const [homeworkInputObj, sethomeworkInputObj] = useState({});\r\n  const homeworkInputTextChg = (e) => {\r\n    sethomeworkInputValue(e.target.value);\r\n  };\r\n  useEffect(\r\n    () => sethomeworkInputObj({ homeworkInput: homeworkInputValue }),\r\n    [homeworkInputValue]\r\n  );\r\n\r\n  const homeworkSave = (e) => {\r\n    const writtenYet =\r\n      homeworkStudentObj.homeworkStudent == \"\" ||\r\n      homeworkDateObj.homeworkDate == \"\" ||\r\n      homeworkInputObj.homeworkInput == \"\";\r\n    if (!writtenYet) {\r\n      const id = { id: new Date().valueOf() };\r\n      //student에서 동일한 학생 이름을 찾아서, 그 때 고른 color 값으로 추가한다.\r\n      const color = student.find(\r\n        (el) => el.name == homeworkStudentObj.homeworkStudent\r\n      ).color;\r\n      const colorObj = { color: color };\r\n      sethomeworkInfoObj({\r\n        ...homeworkStudentObj,\r\n        ...homeworkDateObj,\r\n        ...homeworkInputObj,\r\n        ...colorObj,\r\n        ...id,\r\n      });\r\n      setMainModalText(\"successSaving\");\r\n      setSubModalText(\"successSaving\");\r\n      setModalShow(true);\r\n    } else {\r\n      e.preventDefault();\r\n      setMainModalText(\"writtenYet\");\r\n      setSubModalText(\"writtenYet\");\r\n      setModalShow(true);\r\n    }\r\n  };\r\n\r\n  const homeworkSubmit = (e) => {\r\n    e.preventDefault();\r\n    setHomework([...homework, homeworkInfoObj]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"homeworksKey\", JSON.stringify(homework));\r\n  }, [homework]);\r\n\r\n  //현재 저장한 학생이 0명일 때 모달 창 띄우기\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.getItem(\"profilesKey\") == null ||\r\n      JSON.parse(localStorage.getItem(\"profilesKey\")).length == 0\r\n    ) {\r\n      console.log(\"h\");\r\n      setMainModalText(\"noStudentInHomework\");\r\n      setSubModalText(\"noStudentInHomework\");\r\n      setModalShow(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"build-homework\">\r\n      <div className=\"nav-btn--container\">\r\n        <BiLeftArrowAlt\r\n          className=\"nav-btn\"\r\n          onClick={() => navigate(-1)}\r\n        ></BiLeftArrowAlt>\r\n        <BiHome\r\n          className=\"nav-btn\"\r\n          onClick={() => navigate(\"/tutor-schedule\")}\r\n        ></BiHome>\r\n      </div>\r\n      <div className=\"page-title\">숙제 추가</div>\r\n      <div className=\"titleLine\"></div>\r\n      <form onSubmit={homeworkSubmit}>\r\n        <div className=\"homeworkForm\">\r\n          <div className=\"homeworkForm__student\">\r\n            <p className=\"homeworkForm__student__title\">학생</p>\r\n            <div className=\"homeworkForm__student__names\">\r\n              {student.map((info, i) => (\r\n                <div\r\n                  className={\r\n                    homeworkStudentObj.homeworkStudent == info.name\r\n                      ? `homework-form__student-name ${info.color} student-name--selected`\r\n                      : `homework-form__student-name ${info.color} `\r\n                  }\r\n                  onClick={selectStudentForhomework}\r\n                  key={i}\r\n                >\r\n                  {info.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"contentLine\"></div>\r\n          <div className=\"homeworkForm__date\">\r\n            <p className=\"homeworkForm__date__title\">날짜</p>\r\n            <input\r\n              className=\"homeworkForm__date__content\"\r\n              type=\"date\"\r\n              min=\"2020-01-01\"\r\n              value={homeworkDateValue}\r\n              onChange={homeworkDateChg}\r\n            ></input>\r\n          </div>\r\n          <div className=\"contentLine\"></div>\r\n          <div className=\"homeworkForm__homework\">\r\n            <p className=\"homeworkForm__homework__title\">숙제</p>\r\n            <input\r\n              className=\"homeworkForm__homework__content\"\r\n              type=\"textarea\"\r\n              placeholder=\"단어 Day 1 ~ 2\"\r\n              value={homeworkInputValue}\r\n              onChange={homeworkInputTextChg}\r\n            ></input>\r\n          </div>\r\n          <div className=\"contentLine\"></div>\r\n        </div>\r\n        <button className=\"homeworkForm__saveBtn\" onClick={homeworkSave}>\r\n          저장\r\n        </button>\r\n      </form>\r\n      {/* {modalShow == true && localStorage.getItem(\"profilesKey\") == null ? (\r\n        <div className=\"build-homework__modal\">\r\n          <div className=\"build-homework__modal__overlay\"></div>\r\n          <div className=\"build-homework__modal__content\">\r\n            <div className=\"build-homework__modal__icon\">X</div>\r\n            <div className=\"build-homework__modal__text\">\r\n              모든 항목을 작성해주세요\r\n            </div>\r\n            <button\r\n              className=\"build-homework__modal__okBtn\"\r\n              onClick={displayModal}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null} */}\r\n      {/* {localStorage.getItem(\"profilesKey\") == null ||\r\n      JSON.parse(localStorage.getItem(\"profilesKey\")).length == 0 ? (\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal__overlay\"></div>\r\n          <div className=\"modal__content\">\r\n            <div className=\"modal__content__icon-wrap\">\r\n              <svg\r\n                className=\"modal__content__icon\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 64 64\"\r\n              >\r\n                <path d=\"M38.654 44.556C39.638 43.114 43 4.568 43 4.166S40.294 0 32.996 0 22.01 3.446 22.01 3.446c-.247 1.442 4.673 40.23 5.985 41.59 1.312 1.363 9.675.963 10.66-.48zM25.002 4.648c.052-.397 4.387-2.564 8.24-2.324 3.855.24 7.504 2.604 7.545 3.005.04.4-.37 3.004-.492 2.924-.123-.08-6.355-4.608-6.642-4.568-.287.04-.78 1.042-.41 1.282.37.24 6.765 4.768 6.765 4.928 0 .16-.41 2.324-.41 2.324s-6.847-5.21-7.052-5.21c-.205 0-.615 1.123-.41 1.283.205.16 7.34 5.13 7.34 5.29 0 .16-.165 3.204-.288 3.204-.123 0-6.56-5.69-6.806-5.65-.246.04-.574 1.322-.37 1.442.206.12 7.135 5.85 7.258 6.13.123.28-.287 3.124-.287 3.124s-7.01-5.69-7.134-5.69c-.124 0-.493 1.282-.288 1.442.205.16 7.298 6.01 7.298 6.25s.123 2.846-.164 2.766c-.287-.08-6.314-5.13-6.6-5.13-.288 0-.698.963-.37 1.283.328.32 6.6 5.49 6.642 5.69.04.2-.246 3.566-.246 3.566s-5.904-6.25-6.068-6.25-.37 1.523-.123 1.683c.247.16 5.864 6.01 5.946 6.21.082.2-.164 2.325-.164 2.325s-5.043-4.928-5.207-4.928-.656 1.482-.533 1.603c.123.12 5.453 5.01 5.453 5.01l-.205 2.203-5.084-4.287s-.41 1.24-.328 1.44c.082.2 5.125 4.248 5.125 4.41 0 .16-.205 1.44-.328 1.48-.123.04-.82.24-1.107.12-.287-.12-3.24-2.684-3.362-2.644-.123.04-.492 1.042-.37 1.202.124.16 1.682 1.723 1.682 1.723s-2.952.16-3.157-.12c-.204-.277-5.575-36.338-5.288-38.542zm7.667 45.145c-3.635.253-8.005 2.46-7.955 7.505.05 5.046 3.915 6.482 6.508 6.673 2.593.193 8.973-.454 9.276-5.555.41-6.887-2.83-8.97-7.83-8.622zm-.988 11.89c-2.294 0-3.99-2.428-4.04-4.344-.05-1.917 1.347-4.727 5.187-4.855 1.744-.058 5.086-.156 5.086 5.173 0 3.646-3.94 4.024-6.234 4.024zm-.858-7.867c-1.696.575-1.895 3.32-1.696 4.343.2 1.02 1.397.83 1.646.638.25-.192 0-.32-.15-1.533-.15-1.214.997-2.62 1.197-2.81.2-.192-.457-.82-.996-.64z\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"modal__text--main\">앗..</div>\r\n            <div className=\"modal__text--sub\">\r\n              숙제를 낼 학생이 없어요. <br></br>학생을 추가해주세요.\r\n            </div>\r\n            <Link to=\"/buildprofile\" className=\"modal__do-btn\">\r\n              <div>추가하기</div>\r\n            </Link>\r\n            <Link to=\"/\" className=\"modal__cancel-btn\">\r\n              <div>홈으로</div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : null} */}\r\n      {modalShow ? (\r\n        <ErrorModal\r\n          modalShow={modalShow}\r\n          setModalShow={setModalShow}\r\n          mainModalText={mainModalText}\r\n          subModalText={subModalText}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default BuildHomework;\r\n","import { write } from \"fs\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { BiHome, BiLeftArrowAlt } from \"react-icons/bi\";\r\nimport \"../Styles/basic.scss\";\r\nimport \"../Styles/buildProfile.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ErrorModal from \"./ErrorModal.js\";\r\n\r\nconst BuildProfile = ({\r\n  student,\r\n  setStudent,\r\n  modalShow,\r\n  setModalShow,\r\n  mainModalText,\r\n  setMainModalText,\r\n  subModalText,\r\n  setSubModalText,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  //학교 인풋값을 객체로 만든다.\r\n  const [schoolValue, setSchoolValue] = useState(\"\");\r\n  let [schoolObj, setSchoolObj] = useState({ school: \"\" });\r\n  const schoolChg = (e) => {\r\n    setSchoolValue(e.target.value);\r\n  };\r\n  useEffect(() => setSchoolObj({ school: schoolValue }), [schoolValue]);\r\n\r\n  //이름 인풋값을 객체로 만든다.\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  let [nameObj, setNameObj] = useState({ name: \"\" });\r\n  const nameChg = (e) => {\r\n    setNameValue(e.target.value);\r\n  };\r\n  useEffect(() => setNameObj({ name: nameValue }), [nameValue]);\r\n\r\n  //나이 인풋값을 객체로 만든다.\r\n  const [ageValue, setAgeValue] = useState(\"\");\r\n  let [ageObj, setAgeObj] = useState({ age: \"\" });\r\n  const ageChg = (e) => {\r\n    setAgeValue(parseInt(e.target.value));\r\n  };\r\n  useEffect(() => setAgeObj({ age: ageValue }), [ageValue]);\r\n\r\n  //시급 인풋값을 객체로 만든다.\r\n  const [wageValue, setWageValue] = useState(\"\");\r\n  let [wageObj, setWageObj] = useState({ wage: \"\" });\r\n  const wageChg = (e) => {\r\n    setWageValue(parseInt(e.target.value));\r\n  };\r\n  useEffect(() => setWageObj({ wage: wageValue }), [wageValue]);\r\n\r\n  //주 00회 값을 객체로 만든다.\r\n  const [onWeekValue, setOnWeekValue] = useState(\"\");\r\n  let [onWeekObj, setOnWeekObj] = useState({ wage: \"\" });\r\n  const onWeekChg = (e) => {\r\n    setOnWeekValue(parseInt(e.target.value));\r\n  };\r\n  useEffect(() => setOnWeekObj({ onWeek: onWeekValue }), [onWeekValue]);\r\n\r\n  //주에 몇시간인지 값을 객체로 만든다.\r\n  const [hourValue, setHourValue] = useState(\"\");\r\n  let [hourObj, setHourObj] = useState({ wage: \"\" });\r\n  const hourChg = (e) => {\r\n    setHourValue(parseInt(e.target.value));\r\n  };\r\n  useEffect(() => setHourObj({ hour: hourValue }), [hourValue]);\r\n\r\n  //총 몇회인지 값을 객체로 만든다.\r\n  const [totalNumValue, setTotalNumValue] = useState(\"\");\r\n  let [totalNumObj, setTotalNumObj] = useState({ wage: \"\" });\r\n  const totalNumChg = (e) => {\r\n    setTotalNumValue(parseInt(e.target.value));\r\n  };\r\n  useEffect(() => setTotalNumObj({ totalNum: totalNumValue }), [totalNumValue]);\r\n\r\n  //총 월급이 얼마인지 값을 객체로 만든다.\r\n  const [totalWageValue, setTotalWageValue] = useState(\"\");\r\n  let [totalWageObj, setTotalWageObj] = useState({ wage: \"\" });\r\n  const totalWageChg = (e) => {\r\n    setTotalWageValue(parseInt(e.target.value));\r\n  };\r\n  useEffect(\r\n    () => setTotalWageObj({ totalWage: totalWageValue }),\r\n    [totalWageValue]\r\n  );\r\n\r\n  //수업 시작일 값을 객체로 만든다.\r\n  const [firstDateValue, setFirstDateValue] = useState(\r\n    `${new Date().toISOString().substring(0, 10)}`\r\n  );\r\n\r\n  let [firstDateObj, setFirstDateObj] = useState({ wage: \"\" });\r\n  const firstDateChg = (e) => {\r\n    setFirstDateValue(e.target.value);\r\n  };\r\n  useEffect(\r\n    () => setFirstDateObj({ firstDate: firstDateValue }),\r\n    [firstDateValue]\r\n  );\r\n\r\n  //요일 map\r\n  const [dayMapArr, setDayMapArr] = useState([\r\n    {\r\n      id: \"dayChoice1\",\r\n      value: 1,\r\n      text: \"월\",\r\n    },\r\n    {\r\n      id: \"dayChoice2\",\r\n      value: 2,\r\n      text: \"화\",\r\n    },\r\n    {\r\n      id: \"dayChoice3\",\r\n      value: 3,\r\n      text: \"수\",\r\n    },\r\n    {\r\n      id: \"dayChoice4\",\r\n      value: 4,\r\n      text: \"목\",\r\n    },\r\n    {\r\n      id: \"dayChoice5\",\r\n      value: 5,\r\n      text: \"금\",\r\n    },\r\n    {\r\n      id: \"dayChoice6\",\r\n      value: 6,\r\n      text: \"토\",\r\n    },\r\n    {\r\n      id: \"dayChoice0\",\r\n      value: 0,\r\n      text: \"일\",\r\n    },\r\n  ]);\r\n  //요일 값을 객체로 만들 것이다.\r\n  const [dayValue, setDayValue] = useState([]);\r\n  let [dayObj, setDayObj] = useState({ days: \"\" });\r\n  useEffect(() => setDayObj({ days: dayValue }), [dayValue]);\r\n\r\n  //요일 체크박스에 체크된 것들만 모은다.\r\n  const dayOnClick = (e) => {\r\n    let checked = e.target.checked;\r\n    if (checked) {\r\n      setDayValue([...dayValue, Number(e.target.value)]);\r\n    } else {\r\n      setDayValue(dayValue.filter((el) => el != e.target.value));\r\n    }\r\n  };\r\n\r\n  //색깔 map을 위한 useState을 만든다.\r\n  const [colorMapArr, setColorMapArr] = useState([\r\n    {\r\n      id: \"colorChoice0\",\r\n      value: \"pinkCoral\",\r\n    },\r\n    {\r\n      id: \"colorChoice1\",\r\n      value: \"lightPink\",\r\n    },\r\n    {\r\n      id: \"colorChoice2\",\r\n      value: \"deepYellow\",\r\n    },\r\n    {\r\n      id: \"colorChoice3\",\r\n      value: \"lightYellow\",\r\n    },\r\n    {\r\n      id: \"colorChoice4\",\r\n      value: \"lightGreen\",\r\n    },\r\n    {\r\n      id: \"colorChoice5\",\r\n      value: \"fluorescentGreen\",\r\n    },\r\n    {\r\n      id: \"colorChoice6\",\r\n      value: \"lightblue\",\r\n    },\r\n    {\r\n      id: \"colorChoice7\",\r\n      value: \"deepblue\",\r\n    },\r\n    {\r\n      id: \"colorChoice8\",\r\n      value: \"pastelPurple\",\r\n    },\r\n  ]);\r\n\r\n  //색깔 값을 객체로 만든다.\r\n  const [colorObj, setColorObj] = useState({ color: \"\" });\r\n  const colorOnClick = (e) => {\r\n    setColorObj({ color: e.target.value });\r\n  };\r\n\r\n  // 메모 값을 객체로 만든다.\r\n  const [memoValue, setMemoValue] = useState(\"\");\r\n  let [memoObj, setMemoObj] = useState({ memo: \"\" });\r\n  const memoChg = (e) => {\r\n    setMemoValue(e.target.value);\r\n  };\r\n  useEffect(() => setMemoObj({ memo: memoValue }), [memoValue]);\r\n\r\n  // 지금까지 입력한 input객체들을 모두 모아 하나의 객체로 만들어준다.\r\n  const profileObj = {\r\n    ...nameObj,\r\n    ...schoolObj,\r\n    ...ageObj,\r\n    ...wageObj,\r\n    ...onWeekObj,\r\n    ...hourObj,\r\n    ...totalNumObj,\r\n    ...totalWageObj,\r\n    ...firstDateObj,\r\n    ...colorObj,\r\n    ...memoObj,\r\n    ...dayObj,\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"profilesKey\", JSON.stringify(student));\r\n  }, [student]);\r\n\r\n  // 저장 버튼을 눌렀을 때, 프로필을 다 작성했다면 실행된다.\r\n  const profileSave = (e) => {\r\n    const writtenYet =\r\n      profileObj.name == \"\" ||\r\n      profileObj.school == \"\" ||\r\n      profileObj.age == \"\" ||\r\n      profileObj.wage == \"\" ||\r\n      profileObj.onWeek == \"\" ||\r\n      profileObj.totalNum == \"\" ||\r\n      profileObj.totalWage == \"\" ||\r\n      profileObj.firstDate == \"\" ||\r\n      profileObj.colorObj == \"\" ||\r\n      profileObj.dayObj == \"\";\r\n\r\n    //프로필을 다 작성하지 않았을 때 혹은 이름이 중복될때 저장하지 않고 모달창을 띄운다.\r\n    const 프로필배열 = JSON.parse(localStorage.getItem(\"profilesKey\"));\r\n    if (\r\n      profileObj.name != \"\" &&\r\n      프로필배열.filter((el) => el.name == profileObj.name).length >= 1\r\n    ) {\r\n      e.preventDefault();\r\n      setMainModalText(\"sameName\");\r\n      setSubModalText(\"sameName\");\r\n      setModalShow(true);\r\n    } else if (writtenYet) {\r\n      e.preventDefault();\r\n      setMainModalText(\"writtenYet\");\r\n      setSubModalText(\"writtenYet\");\r\n      setModalShow(true);\r\n    } else if (!writtenYet) {\r\n      //profileObj에 id를 추가한다.\r\n      const id = { id: new Date().valueOf() };\r\n      const profileObjWithId = { ...profileObj, ...id };\r\n      //id까지 추가된 profileObj로 student바꾸기\r\n      setStudent([...student, profileObjWithId]);\r\n      setMainModalText(\"successSaving\");\r\n      setSubModalText(\"successSaving\");\r\n      setModalShow(true);\r\n    }\r\n  };\r\n  const profileSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSchoolValue(\"\");\r\n    setNameValue(\"\");\r\n    setAgeValue(\"\");\r\n    setOnWeekValue(\"\");\r\n    setHourValue(\"\");\r\n    setTotalNumValue(\"\");\r\n    setTotalWageValue(\"\");\r\n    setFirstDateValue(\"\");\r\n    setMemoValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"build-profile\">\r\n      <div className=\"nav-btn--container\">\r\n        <BiLeftArrowAlt\r\n          className=\"nav-btn\"\r\n          onClick={() => navigate(-1)}\r\n        ></BiLeftArrowAlt>\r\n        <BiHome\r\n          className=\"nav-btn\"\r\n          onClick={() => navigate(\"/tutor-schedule\")}\r\n        ></BiHome>\r\n      </div>\r\n      <div className=\"page-title\">개인 프로필</div>\r\n      <div className=\"titleLine\"></div>\r\n      <form onSubmit={profileSubmit}>\r\n        <div className=\"studentInfo\">\r\n          <div className=\"studentInfo--bttm\">\r\n            <div className=\"studentInfo__name\">\r\n              <p className=\"studentInfo__name__title\">이름</p>\r\n              <input\r\n                className=\"studentInfo__name__content\"\r\n                type=\"text\"\r\n                placeholder=\"이수민\"\r\n                value={nameValue}\r\n                onChange={nameChg}\r\n              ></input>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__school\">\r\n              <p className=\"studentInfo__school__title\">학교</p>\r\n              <input\r\n                className=\"studentInfo__school__content\"\r\n                type=\"text\"\r\n                placeholder=\"한국고등학교\"\r\n                value={schoolValue}\r\n                onChange={schoolChg}\r\n              ></input>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__age\">\r\n              <p className=\"studentInfo__age__title\">나이</p>\r\n              <input\r\n                className=\"studentInfo__age__content\"\r\n                type=\"number\"\r\n                placeholder=\"17\"\r\n                value={ageValue}\r\n                onChange={ageChg}\r\n              ></input>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__wage\">\r\n              <p className=\"studentInfo__wage__title\">수업료</p>\r\n              <div className=\"studentInfo__wage__content\">\r\n                <div className=\"studentInfo__wage__args\">\r\n                  <div className=\"studentInfo__wage__p\">\r\n                    <span className=\"studentInfo__highlight\">시급</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"2\"\r\n                      value={wageValue}\r\n                      onChange={wageChg}\r\n                    ></input>\r\n                    만원\r\n                  </div>\r\n                  <div className=\"studentInfo__wage__args__onweek\">\r\n                    <div className=\"studentInfo__wage__p\">\r\n                      <span className=\"studentInfo__highlight\">횟수</span>\r\n                      <span className=\"studentInfo__margin\">\r\n                        <input\r\n                          type=\"number\"\r\n                          placeholder=\"2\"\r\n                          value={hourValue}\r\n                          onChange={hourChg}\r\n                        ></input>\r\n                        시간씩\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"studentInfo__wage__p\">\r\n                      주\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"2\"\r\n                        value={onWeekValue}\r\n                        onChange={onWeekChg}\r\n                      ></input>\r\n                      회\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"studentInfo__wage__result\">\r\n                  <div className=\"studentInfo__wage__p\">\r\n                    <span className=\"studentInfo__highlight\">전체</span>\r\n                    <span className=\"studentInfo__margin\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"8\"\r\n                        value={totalNumValue}\r\n                        onChange={totalNumChg}\r\n                      ></input>\r\n                      회\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"studentInfo__wage__p\">\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"32\"\r\n                      value={totalWageValue}\r\n                      onChange={totalWageChg}\r\n                    ></input>\r\n                    만원\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__first-date\">\r\n              <p className=\"studentInfo__first-date__title\">시작일</p>\r\n              <input\r\n                className=\"studentInfo__first-date__content\"\r\n                type=\"date\"\r\n                value={firstDateValue}\r\n                onChange={firstDateChg}\r\n              ></input>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__days\">\r\n              <p className=\"studentInfo__days__title\">요일</p>\r\n              <div className=\"studentInfo__days__content\">\r\n                {dayMapArr.map((el, i) => (\r\n                  <div key={i}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={el.id}\r\n                      name=\"daysInput\"\r\n                      value={el.value}\r\n                      onClick={dayOnClick}\r\n                    ></input>\r\n                    <label htmlFor={el.id}>\r\n                      <div\r\n                        className={\r\n                          dayValue.includes(el.value)\r\n                            ? \"dayLabel__Div dayChecked\"\r\n                            : \"dayLabel__Div\"\r\n                        }\r\n                      >\r\n                        {el.text}\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__color\">\r\n              <p className=\"studentInfo__color__title\">배경색</p>\r\n              <div className=\"studentInfo__color__inputContainer\">\r\n                {colorMapArr.map((el, i) => (\r\n                  <div key={i}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      className=\"colorInput\"\r\n                      id={el.id}\r\n                      name=\"daysInput\"\r\n                      value={el.value}\r\n                      onClick={colorOnClick}\r\n                    ></input>\r\n                    <label className=\"colorLabel\" htmlFor={el.id}>\r\n                      <div\r\n                        className={\r\n                          colorObj.color == el.value\r\n                            ? `colorLabelDiv ${el.value} colorLabelDarker`\r\n                            : `colorLabelDiv ${el.value}`\r\n                        }\r\n                      ></div>\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__memo\">\r\n              <p className=\"studentInfo__memo__title\">메모</p>\r\n              <input\r\n                className=\"studentInfo__memo__content\"\r\n                type=\"text\"\r\n                placeholder=\"특이사항\"\r\n                value={memoValue}\r\n                onChange={memoChg}\r\n              ></input>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n          </div>\r\n        </div>\r\n        <button className=\"buildProfileSaveBtn\" onClick={profileSave}>\r\n          저장\r\n        </button>\r\n      </form>\r\n      {modalShow ? (\r\n        <ErrorModal\r\n          modalShow={modalShow}\r\n          setModalShow={setModalShow}\r\n          mainModalText={mainModalText}\r\n          subModalText={subModalText}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default BuildProfile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BiHome,\r\n  BiLeftArrowAlt,\r\n  BiCircle,\r\n  BiCheckCircle,\r\n} from \"react-icons/bi\";\r\nimport ErrorModal from \"./ErrorModal.js\";\r\n\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../Styles/basic.scss\";\r\nimport \"../Styles/Profiles.scss\";\r\n\r\nconst Profiles = ({\r\n  student,\r\n  setStudent,\r\n  modalShow,\r\n  setModalShow,\r\n  mainModalText,\r\n  setMainModalText,\r\n  subModalText,\r\n  setSubModalText,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [deleteState, setDeleteState] = useState(false);\r\n  const [selectedDays, setSelectedDays] = useState([]);\r\n  const [checkedProfile, setCheckedProfile] = useState(false);\r\n\r\n  const displayCheckBtn = (info) => {\r\n    if (deleteState == true && selectedDays.includes(info) == false) {\r\n      return <BiCircle />;\r\n    } else if (deleteState == true && selectedDays.includes(info)) {\r\n      return <BiCheckCircle />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const studentInfoMap = student.map((info, i) => (\r\n    <Link\r\n      key={i}\r\n      to={`/tutor-schedule/profiles/:${info.id}`}\r\n      onClick={(e) => deleteState == true && e.preventDefault()}\r\n    >\r\n      <div className={`${info.color} profiles__profile`}>\r\n        <p className=\"profiles__profile__name\">{info.name}</p>\r\n        <div\r\n          className=\"propfiles__profile__deleteBtn\"\r\n          onClick={() => {\r\n            profileOnClick(info);\r\n            setCheckedProfile(!checkedProfile);\r\n          }}\r\n        >\r\n          {displayCheckBtn(info)}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ));\r\n\r\n  const onDeleteMode = () => {\r\n    setDeleteState(!deleteState);\r\n    let daysAfterDelete = student.filter(\r\n      (info) => !selectedDays.includes(info)\r\n    );\r\n    if (deleteState == true && modalShow == false) {\r\n      setStudent(daysAfterDelete);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"profilesKey\", JSON.stringify(student));\r\n  }, [student]);\r\n\r\n  const profileOnClick = (info) => {\r\n    if (deleteState == true && selectedDays.includes(info) == false) {\r\n      setSelectedDays([...selectedDays, info]);\r\n    } else if (deleteState == true && selectedDays.includes(info) == true) {\r\n      const filterUnChecked = selectedDays.filter((el) => el != info);\r\n      setSelectedDays(filterUnChecked);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Profiles\">\r\n      <div className=\"nav-btn--container\">\r\n        <BiLeftArrowAlt\r\n          className=\"nav-btn\"\r\n          onClick={() => navigate(-1)}\r\n        ></BiLeftArrowAlt>\r\n        <BiHome\r\n          className=\"nav-btn\"\r\n          onClick={() => navigate(\"/tutor-schedule\")}\r\n        ></BiHome>\r\n      </div>\r\n      <div className=\"profiles__main\">\r\n        <div>\r\n          <div\r\n            className=\"profiles__deleteBtn\"\r\n            onClick={() => {\r\n              onDeleteMode();\r\n            }}\r\n          >\r\n            {deleteState ? <h1>완료</h1> : <h1>삭제</h1>}\r\n          </div>\r\n        </div>\r\n        <div className=\"page-title\">모든 프로필</div>\r\n        <div className=\"titleLine\"></div>\r\n        <div className=\"profiles__students\">{studentInfoMap}</div>\r\n      </div>\r\n      {/* {modalShow ? (\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal__overlay\"></div>\r\n          <div className=\"modal__content\">\r\n            <div className=\"modal__content__icon-wrap\">\r\n              <svg\r\n                className=\"modal__content__icon\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 64 64\"\r\n              >\r\n                <path d=\"M64 13.435c-.05-.69-9.295-5.66-9.442-5.66-.147 0-10.714 17.672-10.86 17.72-.148.05-3.915-20.183-4.404-21.364C38.804 2.95.09 10.156.01 10.778c-.342 2.658 7.387 48.49 8.22 49.18.83.688 40.31-6.794 40.604-7.237.294-.443-1.614-10.19-1.565-10.93.048-.738 16.78-27.666 16.73-28.355zM9.795 57.838c-.195-.492-7.778-43.025-7.73-45.585.004-.156 35.47-5.81 35.665-5.514.196.294 4.207 21.364 4.158 21.758-.05.394-2.935 4.184-3.082 4.184-.147 0-14.58-11.372-14.92-11.372-.343 0-8.66 8.812-8.513 9.353.147.542 25.243 19.987 25.733 20.233.49.246 4.354-6.006 4.5-5.76.148.246.735 6.203.735 6.203S9.99 58.33 9.796 57.837zM47 38.024c-.183 0-2.862-1.994-3.01-1.994-.146 0-.586 1.108-.586 1.108l2.825 2.03-1.212 1.884s-2.715-1.81-2.9-1.81c-.182 0-.806.776-.55.998.258.222 2.936 1.772 2.9 1.957-.037.185-1.32 2.363-1.43 2.363-.11 0-3.633-2.917-3.743-2.917-.11 0-.954.628-.624.997.33.37 3.56 2.99 3.523 3.1-.037.112-.697 1.995-.99 1.884-.295-.11-23.043-17.02-22.896-17.61.147-.592 5.296-5.6 5.675-5.847.29-.19 14.236 12.16 14.97 11.667.734-.492 16.144-24.96 16.584-24.86.44.098 5.235 3.397 5.235 3.397L52.21 28.55s-1.54-.86-1.65-.825c-.11.037-.55.85-.368.96.183.11 1.394.812 1.394.812s-.99 2.363-1.1 2.326c-.11-.036-1.652-.996-1.8-.996s-.586.923-.476.997c.11.075 1.724 1.146 1.724 1.146l-1.137 2.104s-2.275-1.33-2.385-1.33c-.11 0-.66 1.035-.514 1.146.147.11 2.165 1.477 2.165 1.477s-.88 1.66-1.063 1.66zm-11.74-25.55c-.074-.11-27.634 3.535-27.886 3.915-.073.11-.183 1.18 0 1.328.183.148 27.995-3.58 28.142-3.766.146-.185-.184-1.366-.257-1.477zM19.297 24.4c0-.11-10.31 1.33-10.75 1.55 0 0 .147.998.257 1.22.11.22 9.393-1.33 9.613-1.404.22-.074.88-1.255.88-1.366zm10.017.037s7.155-1.034 7.19-1.145c.038-.11-.182-1.33-.292-1.33-.11 0-8.072 1.256-8.402 1.33-.18.04 1.505 1.145 1.505 1.145zM21.17 37.803c-.184-.074-10.236 1.258-10.495 1.403-.33.185-.073.997.073 1.145.147.15 11.227-1.587 11.484-1.697.258-.112-.88-.777-1.063-.85zm7.007 5.87c-.22-.148-16.33 2.755-16.584 2.806-.367.073 0 .81.183 1.033.183.222 17.135-2.843 17.318-2.954s-.696-.74-.917-.887zm3.89 5.02c-.257-.11-19.362 3.068-19.667 3.287-.257.185.037 1.034.293 1.145.257.11 19.923-3.803 19.923-3.803s-.293-.517-.55-.628zm-10.31-18.79s.476-.813.55-.998c.072-.185-.548-.835-.66-.812-.184.037-1.432 1.735-1.652 2.068-.22.333 4.22 3.36 4.586 3.545.368.185.515-.406.588-.775.074-.37-3.412-3.028-3.412-3.028z\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"modal__text--main\">정말로요?</div>\r\n            <div className=\"modal__text--sub\">삭제시 되돌릴 수 없어요</div>\r\n            <div className=\"modal__cancel-btn\">\r\n              <div\r\n                onClick={() => {\r\n                  setModalShow(false);\r\n                }}\r\n              >\r\n                아니오\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"modal__do-btn\"\r\n              onClick={() => {\r\n                setModalShow(false);\r\n              }}\r\n            >\r\n              <div>네</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null} */}\r\n    </div>\r\n  );\r\n};\r\nexport default Profiles;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"../Styles/basic.scss\";\r\nimport \"../Styles/Profiles.scss\";\r\n// import { Button } from \"@material-ui/core\";\r\nimport { BiHome, BiLeftArrowAlt } from \"react-icons/bi\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst DetailedProfile = ({ student, setStudent, HomeRoundedIcon }) => {\r\n  const navigate = useNavigate();\r\n  const studentInfoMap = student.map((info, i) => (\r\n    <div key={i} className={`${info.color} profiles__profile`}>\r\n      <p className=\"profiles__profile__name\">{info.name}</p>\r\n      <div\r\n        className=\"propfiles__profile__deleteBtn\"\r\n        onClick={() => {\r\n          profileOnClick(info);\r\n        }}\r\n      >\r\n        X\r\n      </div>\r\n    </div>\r\n  ));\r\n  let [deleteState, setDeleteState] = useState(false);\r\n  let [selectedDays, setSelectedDays] = useState([]);\r\n\r\n  const onDeleteMode = () => {\r\n    setDeleteState(!deleteState);\r\n    if (deleteState == true) {\r\n      let daysAfterDelete = student.filter(\r\n        (info) => !selectedDays.includes(info)\r\n      );\r\n      setStudent(daysAfterDelete);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    localStorage.setItem(\"profilesKey\", JSON.stringify(student));\r\n  }, [student]);\r\n\r\n  const profileOnClick = (info) => {\r\n    if (deleteState == true) {\r\n      setSelectedDays([...selectedDays, info]);\r\n    }\r\n  };\r\n\r\n  //시작\r\n  const { profileIdInUrl } = useParams();\r\n  const profileId = profileIdInUrl.slice(1);\r\n  const detailedStudent = student.find((el) => el.id == profileId);\r\n  return (\r\n    <div className=\"Profiles\">\r\n      <div className=\"nav-btn--container\">\r\n        <BiLeftArrowAlt\r\n          className=\"nav-btn\"\r\n          onClick={() => navigate(-1)}\r\n        ></BiLeftArrowAlt>\r\n        <BiHome className=\"nav-btn\" onClick={() => navigate(\"/\")}></BiHome>\r\n      </div>\r\n      <div className=\"profiles__main\">\r\n        <div>\r\n          <div\r\n            className=\"profiles__deleteBtn\"\r\n            onClick={() => {\r\n              onDeleteMode();\r\n            }}\r\n          >\r\n            {deleteState ? <h1>완료</h1> : <h1>삭제</h1>}\r\n          </div>\r\n        </div>\r\n        <div className=\"page-title\">상세 프로필</div>\r\n        <div className=\"titleLine\"></div>\r\n        <div className=\"studentInfo\">\r\n          <div className=\"studentInfo--bttm\">\r\n            <div className=\"studentInfo__name\">\r\n              <p className=\"studentInfo__name__title\">이름</p>\r\n              {detailedStudent.name}\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__school\">\r\n              <p className=\"studentInfo__school__title\">학교</p>\r\n              {detailedStudent.school}\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__age\">\r\n              <p className=\"studentInfo__age__title\">나이</p>\r\n              {detailedStudent.age}\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__wage\">\r\n              <p className=\"studentInfo__wage__title\">수업료</p>\r\n              <div className=\"studentInfo__wage__content\">\r\n                <div className=\"studentInfo__wage__args\">\r\n                  <div className=\"studentInfo__wage__p\">\r\n                    <span className=\"studentInfo__highlight studentInfo__padding\">\r\n                      시급\r\n                    </span>\r\n                    {detailedStudent.wage}\r\n                    만원\r\n                  </div>\r\n                  <div className=\"studentInfo__wage__args__onweek\">\r\n                    <span className=\"studentInfo__highlight studentInfo__padding\">\r\n                      횟수\r\n                    </span>\r\n                    <div className=\"studentInfo__wage__p\">\r\n                      <span className=\"studentInfo__padding\">\r\n                        {detailedStudent.hour}\r\n                        시간씩\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"studentInfo__wage__p\">\r\n                      주{detailedStudent.onWeek}회\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"studentInfo__wage__result\">\r\n                  <div className=\"studentInfo__wage__p\">\r\n                    <span className=\"studentInfo__highlight studentInfo__padding\">\r\n                      전체\r\n                    </span>\r\n                    <span className=\"studentInfo__padding\">\r\n                      {detailedStudent.totalNum}회\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"studentInfo__wage__p\">\r\n                    {detailedStudent.totalWage}\r\n                    만원\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__first-date\">\r\n              <p className=\"studentInfo__first-date__title\">시작일</p>\r\n              {detailedStudent.firstDate}\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__days\">\r\n              <p className=\"studentInfo__days__title\">요일</p>\r\n              <div className=\"studentInfo__days__content\">\r\n                <div>{detailedStudent.days}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__color\">\r\n              <p className=\"studentInfo__color__title\">배경색</p>\r\n              <div>{detailedStudent.color}</div>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n            <div className=\"studentInfo__memo\">\r\n              <p className=\"studentInfo__memo__title\">메모</p>\r\n              <div>{detailedStudent.memo}</div>\r\n            </div>\r\n            <div className=\"contentLine\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DetailedProfile;\r\n","import React from \"react\";\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"build-homework\">\r\n      <div className=\"page-title\">Not Found</div>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\nimport \"./Styles/reset.scss\";\nimport \"./App.scss\";\nimport \"./Styles/_mediaQuery.scss\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Calendar from \"./Components/Calendar.js\";\nimport BuildHomework from \"./Components/BuildHomework\";\nimport BuildProfile from \"./Components/BuildProfile\";\nimport Profiles from \"./Components/Profiles\";\nimport DetailedProfile from \"./Components/DetailedProfile\";\nimport NotFound from \"./Components/NotFound\";\nimport ErrorModal from \"./Components/ErrorModal.js\";\n\nfunction App() {\n  //modal상태들\n  const [modalShow, setModalShow] = useState(false);\n  const [completeModalShow, setCompleteModalShow] = useState(false);\n  const [savedModalShow, setSavedModalShow] = useState(false);\n  const [mainModalText, setMainModalText] = useState(\"writtenYet\");\n  const [subModalText, setSubModalText] = useState(\"writtenYet\");\n  const [student, setStudent] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const saved = window.localStorage.getItem(\"profilesKey\");\n      if (saved !== null) {\n        return JSON.parse(saved);\n      } else {\n        return [];\n      }\n    }\n  });\n  const [homeworkInfo, setHomeworkInfo] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const saved = window.localStorage.getItem(\"homeworksKey\");\n      if (saved !== null) {\n        return JSON.parse(saved);\n      } else {\n        return [];\n      }\n    }\n  });\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route\n          path=\"/tutor-schedule\"\n          element={\n            <Calendar\n              student={student}\n              homework={homeworkInfo}\n              setHomework={setHomeworkInfo}\n            />\n          }\n        ></Route>\n        <Route\n          path=\"/tutor-schedule/homeworkview/:clickedDate\"\n          element={\n            <BuildHomework\n              student={student}\n              homework={homeworkInfo}\n              setHomework={setHomeworkInfo}\n              modalShow={modalShow}\n              setModalShow={setModalShow}\n              mainModalText={mainModalText}\n              setMainModalText={setMainModalText}\n              subModalText={subModalText}\n              setSubModalText={setSubModalText}\n            ></BuildHomework>\n          }\n        ></Route>\n        <Route\n          path=\"/tutor-schedule/buildprofile\"\n          element={\n            <BuildProfile\n              student={student}\n              setStudent={setStudent}\n              modalShow={modalShow}\n              setModalShow={setModalShow}\n              mainModalText={mainModalText}\n              setMainModalText={setMainModalText}\n              subModalText={subModalText}\n              setSubModalText={setSubModalText}\n            ></BuildProfile>\n          }\n        ></Route>\n        <Route\n          path=\"/tutor-schedule/profiles\"\n          element={\n            <Profiles\n              student={student}\n              setStudent={setStudent}\n              // HomeRoundedIcon={HomeRoundedIcon}\n              modalShow={modalShow}\n              setModalShow={setModalShow}\n              mainModalText={mainModalText}\n              setMainModalText={setMainModalText}\n              subModalText={subModalText}\n              setSubModalText={setSubModalText}\n            ></Profiles>\n          }\n        ></Route>\n        <Route\n          path=\"/tutor-schedule/profiles/:profileIdInUrl\"\n          element={\n            <DetailedProfile\n              student={student}\n              setStudent={setStudent}\n              // HomeRoundedIcon={HomeRoundedIcon}\n            ></DetailedProfile>\n          }\n        ></Route>\n        <Route path=\"*\" element={<NotFound></NotFound>}></Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}